{"version":3,"sources":["images/logo512.png","serviceWorker.js","context/webcam.js","components/Loader.js","components/HeaderButton.js","components/SelectAndCheck.js","components/WebcamSelect.js","components/PermissionNeeded.js","components/HeaderButtonGroup.js","components/Webcam.js","lib/constants.js","components/HelpDialog.js","components/GlobalHeader.js","components/DefaultHeader.js","lib/screenConstants.js","components/GameScreens/ScreenHeader.js","components/Null.js","lib/score.js","components/MasksGrid.js","components/ScoreResults.js","components/CapturedMasks.js","components/GameScreens/SinglePlayer/BasicFooter.js","components/ProgressBar.js","lib/util.js","hooks/zip.js","hooks/sfx.js","hooks/speech.js","hooks/audioController.js","context/audio.js","hooks/iterateMask.js","context/carbon.js","hooks/carbonController.js","hooks/loopHandlers/simpleGame.js","hooks/loopHandlers/captureMasks.js","hooks/lapTimer.js","hooks/screenHooks/survival.js","components/GameInfoBox.js","components/GameScreens/SinglePlayer/Survival.js","components/GameScreens/SinglePlayer/SurvivalFooter.js","components/GameScreens/MultiPlayer/MultiplayerFooter.js","components/GameScreens/ScreenFooter.js","components/Options.js","components/SelectGameMode.js","components/FileUpload.js","components/GameSelect.js","hooks/screenHooks/practice.js","components/GameScreens/SinglePlayer/Practice.js","components/ChoosePlayers.js","hooks/screenHooks/timeAttack.js","components/GameScreens/SinglePlayer/TimeAttack.js","hooks/screenHooks/local.js","components/GameScreens/MultiPlayer/Local.js","lib/peerUtils.js","hooks/peerJSController.js","context/peer.js","hooks/screenHooks/remote.js","components/PeerTemp.js","components/Name.js","components/GameScreens/MultiPlayer/Remote.js","components/GameScreens/ScreenContent.js","hooks/bodyPixController.js","context/bodyPix.js","hooks/loop.js","hooks/loopTime.js","hooks/screenController.js","hooks/game.js","components/Warning.js","components/Game.js","components/Main/NoWebcam.js","components/Main/index.js","App/App.js","index.js","worker/bodyPix.js","../node_modules/peerjs/dist sync"],"names":["module","exports","Boolean","window","location","hostname","match","webcamContext","createContext","useWebcam","state","useContext","Error","hasVideo","navigator","mediaDevices","getUserMedia","WebcamProvider","children","rootRef","useRef","videoRef","canvasRef","useState","ctx","setCtx","flipX","setFlipX","ready","setReady","cameras","setCameras","hidden","__setHidden","scratchpad","setScratchpad","videoError","setVideoError","videoStream","setVideoStream","permissionNeeded","setPermissionNeeded","permissionDenied","setPermissionDenied","undefined","currentDeviceId","setCurrentDeviceId","autoStartDeviceId","_setAutoStartDeviceId","useEffect","current","getContext","canvas","document","createElement","width","height","_ctx","setVisible","useCallback","_setHidden","clearScratchpad","clearRect","clearCanvas","stopVideo","getTracks","forEach","track","stop","startVideo","userConstraintsOrDeviceIdx","a","console","error","userConstraints","isDeviceIdx","deviceIdx","log","constraints","video","exact","audio","deviceId","stream","getCapabilities","srcObject","message","toLowerCase","includes","Promise","all","resolve","onloadedmetadata","onloadeddata","then","start","discoverCameras","enumerateDevices","devices","foundCameras","filter","kind","label","map","currentCamera","idx","lastIndexOf","slice","toggleFlipX","setAutoStartDeviceId","localStorage","setItem","clearAutoStartDeviceId","removeItem","imageDataToDataUri","imageData","putImageData","dataUri","toDataURL","dataUriToImageData","img","Image","src","onload","drawImage","getImageData","getVideoAsImageData","autoStartId","getItem","foundEmptyDevice","foundDeviceId","reduce","acc","warn","hasFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullScreen","setFullScreen","onTransition","isFullScreen","fullscreenElement","addEventListener","removeEventListener","enterFullScreen","exitFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullScreen","context","useMemo","Provider","value","Loader","color","styleProps","useSpring","to","opacity","from","config","stiff","div","style","version","id","xmlns","x","y","viewBox","enableBackground","fill","d","attributeName","attributeType","type","dur","repeatCount","useStyles","makeStyles","theme","btn","border","palette","secondary","main","background","primary","transition","HeaderButton","Icon","className","props","classes","IconButton","size","classnames","noop","root","position","arrowIcon","marginLeft","spacing","tooltip","margin","arrow","fontSize","content","display","borderStyle","paper","popper","top","left","marginTop","borderWidth","borderColor","grey","bottom","marginBottom","right","marginRight","SelectAndCheck","Math","random","isMountedRef","anchorEl","setAnchorEl","arrowRef","setArrowRef","handleClickSelect","event","currentTarget","closeSelect","handleCloseSelect","onClose","handleClickCheckbox","onClickCheckbox","target","handleClickSelectItem","onSelect","open","aria-haspopup","button","onClick","aria-controls","SwitchCameraIcon","SelectProps","Menu","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuProps","options","i","key","text","selected","tooltipTitle","checked","checkboxValue","TooltipAndCheckbox","_Checkbox","Checkbox","tooltipText","Tooltip","PopperProps","popperOptions","modifiers","enabled","element","title","Fragment","ref","enterDelay","tooltipEnterDelay","leaveDelay","tooltipLeaveDelay","aria-label","placement","tooltipPlacement","MenuItem","MenuItemProps","ListItemText","toString","WebcamSelect","webcam","selectedCamera","_selectedCamera","none","some","camera","handleSelectCamera","handleSetDefaultCamera","activeTitle","length","alignItems","justifyContent","padding","borderRadius","textAlign","PermissionNeeded","slideProps","transform","slow","fadeProps","wobbly","Paper","container","Typography","component","variant","rel","href","HeaderButtonGroup","controller","onHomeScreen","handleBack","toggleAudio","audioState","openHelp","BackIcon","VolumeUpIcon","VolumeOffIcon","ContactSupportIcon","fs","maxWidth","paddingLeft","paddingRight","overflow","zIndex","overlay","overlayColor","loader","buttons","logo","Webcam","autoPlay","videoWidth","videoHeight","ExitFullScreen","EnterFullScreen","headerController","alt","closeButton","ever","fontWeight","fontStyle","memo","handleClose","Dialog","aria-labelledby","dialogRoot","disableTypography","dividers","dialogContent","gutterBottom","carbonCopy","helpOpen","closeHelp","heading","DefaultHeader","game","useGame","screen","mode","screenTypes","screenStates","DEFAULT","PLAY","players","SINGLE_PLAYER","MULTIPLAYER","PRACTICE","SURVIVAL","TIME_ATTACK","screenStatesArrays","Object","entries","stateKey","statesObj","values","_","modeAcc","playerModeKey","playerModesObj","initialScreenState","Headers","ScreenHeader","screenState","HeaderContent","Null","rawScoreToTenBinScore","score","p","max","min","round","scoreToColor","alpha","r","g","hex","b","hexToRGB","red","green","blue","e","tenBinScoreToColor","tenBinScoreToPercent","masks","masksHeader","masksList","flexFlow","maskContainer","imgContainer","removeMask","iconBtn","backgroundColor","actions","MasksGrid","actionButtons","getDataUri","getImageChild","getPaperProps","PaperProps","maskItem","paperProps","ScoreResults","results","fixedGameScore","toFixed","CapturedMasks","captureMasks","handlePlay","PlayIcon","DownloadIcon","downloadMasks","CloseIcon","removeAllMasks","binary","name","BasicFooter","showTimeAttackResults","simpleGame","handlePlayCapturedMasks","resultsText","showResults","loop","looping","scores","hideClose","clearScores","flip","pWebkitTransform","filler","completed","ProgressBar","jitterMask","mask","maskMatIn","cv","matFromImageData","rows","cols","randomRotate","maskMat","Mat","center","Point","M","getRotationMatrix2D","warpAffine","INTER_NEAREST","BORDER_CONSTANT","Scalar","rgbaPlanes","MatVector","split","roi_x_min","roi_y_min","roi_x_max","roi_y_max","res1","res2","get","REDUCE_MAX","data","roi_width","roi_height","rect_obj","Rect","maxWidthResize","roi","maxHeightResize","maxResize","randomScale","dsize","Size","resize","rect_width","rect_height","centeredLeft","randomX","rect_paste","output","zeros","copyTo","jitteredResult","ImageData","Uint8ClampedArray","delete","getOpenCvMaskFromSegmentation","segmentation","flipped","binaryBytes","parseInt","isPerson","bytes_index","binaryImageData","segData","pre_mask","threshold","THRESH_BINARY","contours","hierarchy","findContours","RETR_CCOMP","CHAIN_APPROX_SIMPLE","CV_8UC1","contourArea","drawContours","LINE_8","getSegmentationeOverlayAndBinaryImageData","CV_8UC4","setTo","borderMask","ones","CV_8U","anchor","dilate","morphologyDefaultBorderValue","subtract","merge","overlayImageData","getScore","targetImageData","union","intersection","isInPolygon","pixelWeight","getScoreAndOverlayForSegmentationAndImageData","segmentationMask","segOverlay","segOverlayImageData","targetData","targetRgbaPlanes","mergedImage","addWeighted","mergedOverlayImageData","targetOverlay","saveAs","blob","filename","msSaveOrOpenBlob","msSaveBlob","elem","URL","createObjectURL","download","body","documentElement","appendChild","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","revokeObjectURL","getMaskName","num","useZip","setMasks","zipLoading","setZipLoading","loadZippedMasks","file","JSZip","loadAsync","endsWith","async","binaryMasks","b64","masksAsImageData","handleZipInputChange","handleLoadPreparedMasks","external","reject","JSZipUtils","getBinaryContent","process","err","handleLoadRandomMaskSet","floor","loading","useSfx","audioRef","play","soundName","AudioContext","webkitAudioContext","mozAudioContext","source","createBufferSource","myRequest","Request","fetch","response","arrayBuffer","buffer","decodeAudioData","decodedData","connect","destination","makeSound","playSuccessSound","playFailureSound","playCameraSound","synth","speechSynthesis","useAudioController","setAudioState","speech","voices","setVoices","voice","setVoice","allVoices","getVoices","say","utterance","SpeechSynthesisUtterance","speak","countdown","onEnd","onEach","setTimeout","Array","useSpeech","sfx","toggle","stateRef","handlers","audioContext","useAudio","AudioProvider","useIterateMask","masksRef","maskRef","maskIdxRef","_setMasks","newMasks","reset","shuffle","temporaryValue","randomIndex","array","currentIndex","resetAndShuffle","next","jitter","currentMask","getNumMasks","orig_mask","hasMasks","carbonContext","useCarbon","CarbonProvider","carbonRef","carbonState","setCarbonState","__carbonate__","useCarbonController","useSimpleGame","setLapTimeInfo","promRef","roundTracker","maskIterator","lastTimeAttackSuccess","setScores","zip","useMultiplayerScores","multiplayerScores","setMultiplayerScores","handleBasicLoop","playerIndex","sendResults","time","first","useTimer","maxLaps","announceSeconds","onLap","predict","scorePacket","newState","handleLoop","handleMultiplayerLoop","handleSurvivalLoop","lapDuration","tenBinScore","t_sec","timerRef","handleTimeAttackLoop","postLapDelay","currentMaskIdx","segmentationMs","elapsed","segmentationSec","numSecs","Number","catch","useCaptureMasks","maxMasks","maskCountRef","arg","getMasks","index","folder","imageDataUri","decode","dataBase64","base64","generateAsync","zipFile","onLoopEnd","onBeforeStartLap","overlayDataUri","binaryDataUri","initialLapInfo","percent","percentRemaining","secondsRemaining","useSurvival","lapTimeInfo","loadedRef","handleClickGame","handleClickCaptureMasks","paddingBottom","help","maxHeight","helpBtn","icon","helpContent","fontFamily","getFonts","GameInfoBox","headerContent","middleContent","footerContent","primaryText","secondaryText","iconProps","isLoading","showHelp","setShowHelp","toggleHelp","IconComponent","CircularProgress","replay","ReplayIcon","classNames","subtext","disabled","isArray","flexDirection","optionsTop","progress","getSurvivalPaperProps","ind","Survival","survival","useGameMode","SurvivalFooter","minWidth","MultiplayerFooter","multiplayerResultsText","Footers","LOCAL","REMOTE","ScreenFooter","Footer","h","v","getConfig","offset","Options","trail","useTrail","labelTrail","setLabel","layout","Component","visible","hover","componentProps","mouseEffects","onMouseEnter","onMouseLeave","iconButton","Button","gameMode","header","Icons","WeightIcon","BeachIcon","TimerIcon","HouseIcon","LanguageIcon","SelectGameMode","handleSetGameMode","setGameMode","obj","fileInput","FileUpload","onChange","multiple","buttonProps","fileRef","handleFileUpload","fileObject","disallowMultiple","allFiles","files","filteredFiles","resetFile","item","GameSelect","setWidth","clientWidth","React","handleOpen","handleClick","fullWidth","containerRef","usePractice","loopType","setLoopType","handleStartRandomGame","scrollContainer","overflowY","rootTop","rootApart","captures","Practice","practice","timerColor","PersonIcon","PeopleAltIcon","ChoosePlayers","handleSetPlayerMode","setPlayerMode","playerMode","useTimeAttack","total","average","TimeAttack","timeAttack","useLocal","multiplayerScoreSums","playerIdx","setupProgress","setSetupProgress","incrementProgress","handleCapture","handlePlayGame","maskIndex","handleReset","NUM_MASKS","stepper","useColorlibStepIconStyles","active","backgroundImage","light","dark","boxShadow","ColorlibStepIcon","icons","1","2","3","4","String","stepperLabels","Local","local","replayPhase","winnerText","Stepper","alternativeLabel","activeStep","connector","StepConnector","Step","StepLabel","StepIconComponent","makePeerId","cleanPeerId","replace","makeNameOk","usePeerJSController","reconnectRef","playerOneRef","myId","setId","peer","setPeer","connection","setConnection","isConnected","setIsConnected","opponentName","setOpponentName","isConnecting","setIsConnecting","opponentClickedReset","setOpponentClickedReset","faker","internet","userName","myName","setMyName","isPlayerOne","clearMasks","triggerRestart","resetEverything","handleConnect","conn","on","dunno","eventName","maskDataURIs","opponentPlayerIdx","_connection","init","newName","enableConnect","_peer","Peer","send","serialization","updateName","destroy","myNewName","peerId","resetGame","peerJSContext","usePeerJS","PeerJSProvider","useRemote","multiplayerScoreThing","peerJs","handleOpponentReset","flexGrow","PeerTemp","setPeerId","TextField","placeholder","disableConnect","span","Name","nameSetRef","setName","textFieldRef","timeout","handleBlur","resolvedName","clearTimeout","setDisableConnect","inputProps","spellCheck","onBlur","idContainer","bold","Remote","remote","opponentMaskIdx","hasOpponentMasks","isYourTurn","opponentIsPlaying","opponentsTurn","opponentIsPlayingText","yourTurn","waiting","ConnectedGameBox","UnconnectedGameBox","Screens","ScreenContent","Content","bodyPixWorker","BodyPixWorker","bodyPixContext","BodyPixProvider","loadRef","preloadRef","netReady","setNetReady","netPreloaded","setNetPreloaded","load","useBodyPixController","useLoop","useBodyPix","loopReady","loopTime","lastTimeRef","startTimeRef","totalFramesRef","fpsSumRef","lapTime","timestamp","resetLapTime","update","deltaTime","fps","avgFps","frames","useLoopTime","lapTimer","onBeforeComplete","onBeforeStarted","onEndCalled","numLaps","handleLap","secondsPassed","lapInfo","lastSpeech","handlerCalled","handlerResolved","lapNum","clear","useLapTimer","loopingRef","handleLoopRef","setLooping","setStartLoop","setStopLoop","cleanup","requestAnimationFrame","reducer","action","useGameController","setMode","useReducer","dispatch","setScreen","resetState","reverseState","useScreenController","screenHandlers","warningAcknowledged","setWarningAcknowledged","warningRef","setHelpOpen","handleOpenHelp","handleCloseHelp","handleCloseWarning","warning","group","DialogActions","gameContext","useGameModeHook","NoWebcam","multiplayerScoreContext","startedRef","fonts","join","createMuiTheme","typography","useNextVariants","body1","overrides","cvReady","setCvReady","particlesRef","interval","setInterval","clearInterval","Particles","selector","CssBaseline","ReactDOM","render","getElementById","serviceWorker","registration","unregister","addMethods","methods","w","Worker","webpackEmptyContext","req","code","keys"],"mappings":"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","file":"static/js/main.a1397e57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.e400cec2.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {\n  createContext,\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n  useContext,\n} from 'react';\n\nexport const webcamContext = createContext();\n\nexport const useWebcam = () => {\n  const state = useContext(webcamContext);\n\n  if (!state) {\n    throw new Error('useWebcam must be used within a WebcamProvider');\n  }\n\n  return state;\n};\n\nconst VIDEO_WIDTH = 1280;\nconst VIDEO_HEIGHT = 720;\nconst AUTOSTART_KEY = 'AutoStartId';\nconst hasVideo = !!navigator?.mediaDevices?.getUserMedia;\n\nconst WebcamProvider = ({ children }) => {\n  const rootRef = useRef();\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [ctx, setCtx] = useState(null);\n  const [flipX, setFlipX] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [cameras, setCameras] = useState([]);\n  const [hidden, __setHidden] = useState(true);\n  const [scratchpad, setScratchpad] = useState(null);\n  const [videoError, setVideoError] = useState(null);\n  const [videoStream, setVideoStream] = useState(null);\n  const [permissionNeeded, setPermissionNeeded] = useState(false);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n  const [currentDeviceId, setCurrentDeviceId] = useState(undefined);\n  const [autoStartDeviceId, _setAutoStartDeviceId] = useState(undefined);\n\n  useEffect(() => {\n    if (canvasRef.current && !ctx) {\n      setCtx(canvasRef.current.getContext('2d'));\n    } else if (ctx && !canvasRef.current) {\n      setCtx(null);\n    }\n  }, [ctx]);\n\n  // create a scratchpad for performing image transformations\n  // without cluttering the main canvas\n  useEffect(() => {\n    if (ready && !scratchpad) {\n      const canvas = document.createElement('canvas');\n      canvas.width = canvasRef.current.width;\n      canvas.height = canvasRef.current.height;\n      const _ctx = canvas.getContext('2d');\n\n      setScratchpad({ ctx: _ctx, canvas });\n    }\n  }, [scratchpad, ready]);\n\n  const setVisible = useCallback(() => {\n    __setHidden(false);\n  }, []);\n\n  const _setHidden = useCallback(() => {\n    __setHidden(true);\n  }, []);\n\n  const clearScratchpad = useCallback(() => {\n    scratchpad.ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  }, [scratchpad]);\n\n  const clearCanvas = useCallback(() => {\n    ctx.clearRect(0, 0, canvasRef.current?.width, canvasRef.current?.height);\n  }, [ctx]);\n\n  const stopVideo = useCallback(() => {\n    if (videoStream) {\n      videoStream.getTracks().forEach((track) => track.stop());\n    }\n\n    setVideoError(null);\n    setVideoStream(null);\n    setReady(false);\n    setCurrentDeviceId(undefined);\n  }, [videoStream]);\n\n  const startVideo = useCallback(\n    async (userConstraintsOrDeviceIdx) => {\n      stopVideo();\n\n      if (!hasVideo) {\n        const message = 'Video not supported';\n\n        console.error(message);\n        setVideoError(message);\n\n        return;\n      }\n\n      const isDeviceIdx = typeof userConstraintsOrDeviceIdx === 'number';\n\n      const userConstraints = isDeviceIdx ? {} : userConstraintsOrDeviceIdx || {};\n      const deviceIdx = isDeviceIdx ? userConstraintsOrDeviceIdx : userConstraints.deviceIdx;\n\n      try {\n        console.log('Finding Webcams...');\n        const constraints = {\n          video: {\n            width: { exact: userConstraints.width || VIDEO_WIDTH },\n            height: { exact: userConstraints.height || VIDEO_HEIGHT },\n          },\n          audio: false,\n        };\n\n        if (deviceIdx !== undefined) {\n          userConstraints.deviceId = cameras[deviceIdx]?.deviceId;\n        }\n\n        if (userConstraints.deviceId) {\n          constraints.video.deviceId = { exact: userConstraints.deviceId };\n        }\n\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        const deviceId = stream.getTracks()[0]?.getCapabilities()?.deviceId;\n\n        console.log('Found webcam!');\n        setVideoStream(stream);\n        setCurrentDeviceId(deviceId);\n        setVideoError(false);\n        setPermissionDenied(false);\n        setPermissionNeeded(false);\n        videoRef.current.srcObject = stream;\n      } catch (e) {\n        const message = 'Error starting video.';\n        console.error(message);\n        console.error(e.message);\n        if (e.message?.toLowerCase?.()?.includes?.('permission denied')) {\n          setPermissionDenied(true);\n        }\n        setVideoStream(null);\n        setReady(false);\n        setVideoError(message);\n\n        return;\n      }\n\n      return await Promise.all([\n        new Promise((resolve) => {\n          videoRef.current.onloadedmetadata = () => resolve();\n        }),\n        new Promise((resolve) => {\n          videoRef.current.onloadeddata = () => resolve();\n        }),\n      ]).then(() => {\n        console.log('Webcam ready!');\n        setReady(true);\n        __setHidden(false);\n      });\n    },\n    [stopVideo, videoRef, cameras],\n  );\n\n  const start = useCallback(async () => startVideo({ deviceId: autoStartDeviceId }), [\n    autoStartDeviceId,\n    startVideo,\n  ]);\n\n  const discoverCameras = useCallback(async () => {\n    const enumerateDevices = navigator?.mediaDevices?.enumerateDevices;\n\n    if (!enumerateDevices) {\n      console.error('Cannot get cameras.');\n\n      return [];\n    }\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const foundCameras = devices\n      .filter(\n        ({ kind, label }) => kind === 'videoinput' && !label.includes('CamTwist'), // filter by video elements and remove CamTwist virtual devices\n      )\n      .map((currentCamera) => {\n        let label;\n        const idx = currentCamera.label.lastIndexOf(' (');\n        if (idx > -1) label = currentCamera.label.slice(0, idx);\n\n        return label ? { deviceId: currentCamera.deviceId, label } : currentCamera;\n      });\n\n    setCameras(foundCameras);\n\n    return foundCameras;\n  }, []);\n\n  const toggleFlipX = useCallback(() => setFlipX((state) => !state), []);\n\n  const setAutoStartDeviceId = useCallback((deviceId) => {\n    window.localStorage.setItem(AUTOSTART_KEY, deviceId);\n    _setAutoStartDeviceId(deviceId);\n  }, []);\n\n  const clearAutoStartDeviceId = useCallback(() => {\n    window.localStorage.removeItem(AUTOSTART_KEY);\n    _setAutoStartDeviceId(null);\n  }, []);\n\n  const imageDataToDataUri = useCallback(\n    (imageData) => {\n      clearScratchpad();\n      scratchpad.ctx.putImageData(imageData, 0, 0);\n      const dataUri = scratchpad.canvas.toDataURL('image/png');\n      clearScratchpad();\n\n      return dataUri;\n    },\n    [scratchpad, clearScratchpad],\n  );\n\n  const dataUriToImageData = useCallback(\n    async (dataUri) => {\n      clearScratchpad();\n      const img = new Image();\n      img.src = dataUri;\n\n      await new Promise((resolve) => {\n        img.onload = () => {\n          scratchpad.ctx.drawImage(img, 0, 0);\n          resolve();\n        };\n      });\n\n      const imageData = scratchpad.ctx.getImageData(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n      clearScratchpad();\n\n      return imageData;\n    },\n    [clearScratchpad, scratchpad],\n  );\n\n  const getVideoAsImageData = useCallback(() => {\n    clearScratchpad();\n    scratchpad.ctx.drawImage(videoRef.current, 0, 0);\n    const imageData = scratchpad.ctx.getImageData(\n      0,\n      0,\n      canvasRef.current.width,\n      canvasRef.current.height,\n    );\n    clearScratchpad();\n\n    return imageData;\n  }, [clearScratchpad, scratchpad]);\n\n  useEffect(() => {\n    discoverCameras().then((foundCameras) => {\n      const autoStartId = window.localStorage.getItem(AUTOSTART_KEY);\n\n      let foundEmptyDevice = false;\n      let foundDeviceId = foundCameras[0]?.deviceId;\n      foundDeviceId =\n        foundCameras.reduce((acc, { deviceId, label }, idx) => {\n          if (!deviceId) foundEmptyDevice = true;\n\n          if (deviceId === autoStartId) return deviceId;\n\n          return acc || (label.includes('Built-in') ? deviceId : null);\n        }, null) || foundDeviceId;\n\n      if (foundDeviceId) {\n        setAutoStartDeviceId(foundDeviceId);\n      } else if (foundEmptyDevice) {\n        setPermissionNeeded(true);\n        console.warn('Need video permissions!');\n      } else if (!foundDeviceId && autoStartId) clearAutoStartDeviceId();\n    });\n  }, []); // eslint-disable-line\n\n  const hasFullScreen = !!(\n    rootRef.current?.requestFullscreen ||\n    rootRef.current?.mozRequestFullScreen ||\n    rootRef.current?.webkitRequestFullscreen ||\n    rootRef.current?.msRequestFullscreen\n  );\n\n  const [fullScreen, setFullScreen] = useState(false);\n\n  useEffect(() => {\n    const onTransition = () => {\n      const isFullScreen = !!document.fullscreenElement;\n      setFullScreen(isFullScreen);\n    };\n\n    document.addEventListener('fullscreenchange', onTransition);\n\n    return () => document.removeEventListener('fullscreenchange', onTransition);\n  }, []);\n\n  const enterFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (rootRef.current.requestFullscreen) {\n      rootRef.current.requestFullscreen();\n    } else if (rootRef.current.mozRequestFullScreen) {\n      /* Firefox */\n      rootRef.current.mozRequestFullScreen();\n    } else if (rootRef.current.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      rootRef.current.webkitRequestFullscreen();\n    } else if (rootRef.current.msRequestFullscreen) {\n      /* IE/Edge */\n      rootRef.current.msRequestFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const exitFullScreen = useCallback(() => {\n    if (!hasFullScreen) return;\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }, [hasFullScreen]);\n\n  const toggleFullScreen = useCallback(() => {\n    if (fullScreen) exitFullScreen();\n    else enterFullScreen();\n  }, [fullScreen, enterFullScreen, exitFullScreen]);\n\n  const context = useMemo(\n    () => ({\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      rootRef,\n      cameras,\n      setFlipX,\n      videoRef,\n      hasVideo,\n      _setHidden,\n      canvasRef,\n      stopVideo,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      clearCanvas,\n      toggleFlipX,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      stop: stopVideo,\n      discoverCameras,\n      permissionNeeded,\n      permissionDenied,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n      isFullScreen: fullScreen,\n    }),\n    [\n      ctx,\n      ready,\n      flipX,\n      start,\n      hidden,\n      cameras,\n      setFlipX,\n      _setHidden,\n      stopVideo,\n      fullScreen,\n      setVisible,\n      startVideo,\n      videoError,\n      scratchpad,\n      toggleFlipX,\n      clearCanvas,\n      videoStream,\n      hasFullScreen,\n      exitFullScreen,\n      clearScratchpad,\n      currentDeviceId,\n      enterFullScreen,\n      discoverCameras,\n      permissionNeeded,\n      permissionDenied,\n      toggleFullScreen,\n      autoStartDeviceId,\n      imageDataToDataUri,\n      dataUriToImageData,\n      getVideoAsImageData,\n      setAutoStartDeviceId,\n      clearAutoStartDeviceId,\n    ],\n  );\n\n  return <webcamContext.Provider value={context}>{children}</webcamContext.Provider>;\n};\n\nexport default WebcamProvider;\n","import React from 'react';\nimport { useSpring, animated, config } from 'react-spring';\n\nconst Loader = ({ color = '#fff' }) => {\n  const styleProps = useSpring({ to: { opacity: 1 }, from: { opacity: 0 }, config: config.stiff });\n\n  // https://codepen.io/nikhil8krishnan\n  return (\n    <animated.div style={styleProps}>\n      <svg\n        version=\"1.1\"\n        id=\"L7\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 100 100\"\n        enableBackground=\"new 0 0 100 100\"\n      >\n        <path\n          fill={color}\n          d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n    c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n    c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"1s\"\n            from=\"0 50 50\"\n            to=\"-360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n        <path\n          fill={color}\n          d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n    L82,35.7z\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            attributeType=\"XML\"\n            type=\"rotate\"\n            dur=\"2s\"\n            from=\"0 50 50\"\n            to=\"360 50 50\"\n            repeatCount=\"indefinite\"\n          />\n        </path>\n      </svg>\n    </animated.div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport classnames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    border: `2px solid ${theme.palette.secondary.main}`,\n    background: theme.palette.primary.main,\n    color: theme.palette.secondary.main,\n    transition: '300ms all',\n    '&:hover': {\n      border: `2px solid ${theme.palette.primary.main}`,\n      background: theme.palette.secondary.main,\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst HeaderButton = ({ Icon, className, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <IconButton\n      size=\"small\"\n      className={classnames(classes.btn, { [className]: className })}\n      {...props}\n    >\n      <Icon />\n    </IconButton>\n  );\n};\n\nHeaderButton.propTypes = {\n  Icon: PropTypes.object.isRequired,\n};\n\nexport default HeaderButton;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback, useState } from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwitchCameraIcon from '@material-ui/icons/SwitchCamera';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport HeaderButton from './HeaderButton';\n\nconst noop = () => {};\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({\n    position: 'relative',\n  }),\n  arrowIcon: (props) => ({\n    marginLeft: theme.spacing(1),\n  }),\n  tooltip: (props) => ({\n    position: 'relative',\n    margin: 0,\n  }),\n  arrow: (props) => ({\n    position: 'absolute',\n    fontSize: 6,\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  }),\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n  popper: (props) => ({\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.grey[700]} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.95em',\n      width: '2em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.grey[700]} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.grey[700]} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.95em',\n      height: '2em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.grey[700]}`,\n      },\n    },\n  }),\n}));\n\nconst SelectAndCheck = (props) => {\n  const classes = useStyles(props);\n  const id = useMemo(Math.random, []);\n\n  const isMountedRef = useRef();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [arrowRef, setArrowRef] = useState(null);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  const handleClickSelect = useCallback((event) => {\n    if (isMountedRef.current) setAnchorEl(event.currentTarget);\n  }, []);\n\n  const closeSelect = useCallback(() => {\n    if (isMountedRef.current) setAnchorEl(null);\n  }, []);\n\n  const handleCloseSelect = useCallback(async () => {\n    const keepOpen = await (props.onClose || noop)();\n\n    if (keepOpen !== true) {\n      closeSelect();\n    }\n  }, [closeSelect, props.onClose]);\n\n  const handleClickCheckbox = useCallback(\n    (event) => {\n      (props.onClickCheckbox || noop)(event.target.value, handleCloseSelect);\n    },\n    [props.onClickCheckbox, handleCloseSelect],\n  );\n\n  const handleClickSelectItem = useCallback(\n    (value) => async (event) => {\n      if (event.target.type === 'checkbox') {\n        return;\n      }\n\n      const keepOpen = await (props.onSelect || noop)(value);\n\n      if (keepOpen !== true) {\n        handleCloseSelect();\n      }\n    },\n    [handleCloseSelect, props.onSelect],\n  );\n\n  const open = !!anchorEl;\n\n  return (\n    <div className={classes.root}>\n      <HeaderButton\n        aria-haspopup=\"true\"\n        className={classes.button}\n        onClick={handleClickSelect}\n        aria-controls={`select-and-check-${id}`}\n        Icon={SwitchCameraIcon}\n        {...props.SelectProps}\n      />\n      <Menu\n        keepMounted\n        open={open}\n        elevation={0}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        onClose={handleCloseSelect}\n        id={`select-and-check-${id}`}\n        classes={{ paper: classes.paper }}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n        {...props.MenuProps}\n      >\n        {props.options?.map(\n          ({ key, value, text, selected, tooltipTitle, checked, checkboxValue }, i) => {\n            let TooltipAndCheckbox = null;\n\n            if (typeof checked === 'boolean') {\n              const _Checkbox = (\n                <Checkbox\n                  checked={checked}\n                  onClick={handleClickCheckbox}\n                  value={checkboxValue === undefined ? value : checkboxValue}\n                />\n              );\n              const tooltipText = tooltipTitle || props.tooltipTitle;\n\n              TooltipAndCheckbox = tooltipText ? (\n                <Tooltip\n                  classes={{ tooltip: classes.tooltip, popper: classes.popper }}\n                  PopperProps={{\n                    popperOptions: {\n                      modifiers: {\n                        arrow: {\n                          enabled: !!arrowRef,\n                          element: arrowRef,\n                        },\n                      },\n                    },\n                  }}\n                  title={\n                    <React.Fragment>\n                      {tooltipText}\n                      <span className={classes.arrow} ref={setArrowRef} />\n                    </React.Fragment>\n                  }\n                  enterDelay={props.tooltipEnterDelay === undefined ? 750 : props.tooltipEnterDelay}\n                  leaveDelay={props.tooltipLeaveDelay || 0}\n                  aria-label=\"checkbox\"\n                  placement={props.tooltipPlacement || 'top'}\n                >\n                  {_Checkbox}\n                </Tooltip>\n              ) : (\n                _Checkbox\n              );\n            }\n\n            return (\n              <MenuItem\n                key={key || i}\n                onClick={handleClickSelectItem(value)}\n                selected={selected}\n                {...props.MenuItemProps}\n              >\n                {TooltipAndCheckbox}\n                <ListItemText primary={text || value?.toString()} />\n              </MenuItem>\n            );\n          },\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nSelectAndCheck.propTypes = {\n  styles: PropTypes.object,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  onSelect: PropTypes.func,\n  MenuProps: PropTypes.object,\n  SelectProps: PropTypes.object,\n  activeTitle: PropTypes.string,\n  tooltipTitle: PropTypes.string,\n  MenuItemProps: PropTypes.object,\n  onClickCheckbox: PropTypes.func,\n  tooltipEnterDelay: PropTypes.number,\n  tooltipLeaveDelay: PropTypes.number,\n  tooltipPlacement: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default SelectAndCheck;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useMemo, useCallback } from 'react';\n\nimport SelectAndCheck from './SelectAndCheck';\nimport { useWebcam } from '../context/webcam';\n\nconst useStyles = makeStyles((theme) => ({\n  root: (props) => ({}),\n}));\n\nconst WebcamSelect = (props) => {\n  const webcam = useWebcam();\n  const classes = useStyles({ ...props, ...webcam });\n\n  const selectedCamera = useMemo(() => {\n    let _selectedCamera = { deviceId: null, label: null, none: true };\n\n    if (!webcam.currentDeviceId) {\n      return _selectedCamera;\n    }\n\n    webcam.cameras.some((camera) => {\n      if (camera.deviceId === webcam.currentDeviceId) {\n        _selectedCamera = camera;\n\n        return true;\n      }\n\n      return false;\n    });\n\n    return _selectedCamera;\n  }, [webcam.cameras, webcam.currentDeviceId]);\n\n  const handleSelectCamera = useCallback(\n    (deviceId) => {\n      if (webcam.currentDeviceId !== deviceId) {\n        webcam.startVideo({ deviceId });\n      }\n    },\n    [webcam],\n  );\n\n  const handleSetDefaultCamera = useCallback(\n    (deviceId) => {\n      if (webcam.autoStartDeviceId === deviceId) {\n        webcam.clearAutoStartDeviceId();\n      } else {\n        webcam.setAutoStartDeviceId(deviceId);\n        handleSelectCamera(deviceId);\n      }\n    },\n    [webcam, handleSelectCamera],\n  );\n\n  return (\n    <div className={classes.root}>\n      <SelectAndCheck\n        activeTitle=\"Select Camera\"\n        title={\n          webcam.cameras?.length\n            ? selectedCamera.label || 'No Camera Selected'\n            : 'No Cameras Detected'\n        }\n        onSelect={handleSelectCamera}\n        onClickCheckbox={handleSetDefaultCamera}\n        options={webcam.cameras.map((camera) => ({\n          key: camera.label,\n          value: camera.deviceId,\n          text: camera.label || 'Unknown Device',\n          selected: camera.deviceId === webcam.currentDeviceId,\n          checked: webcam.autoStartDeviceId === camera.deviceId,\n          tooltipTitle:\n            webcam.autoStartDeviceId === camera.deviceId ? 'Remove Default' : 'Set Default',\n        }))}\n      />\n    </div>\n  );\n};\n\nWebcamSelect.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default WebcamSelect;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport WebcamSelect from './WebcamSelect';\n\nimport { Paper } from '@material-ui/core';\nimport { useSpring, config, animated } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    '& h1': {\n      marginBottom: theme.spacing(2),\n    },\n    '& p': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n\nconst PermissionNeeded = (props) => {\n  const classes = useStyles(props);\n\n  const slideProps = useSpring({\n    transform: 'translate3d(0,0px,0)',\n    from: { transform: 'translate3d(0,-500px,0)' },\n    config: config.slow,\n  });\n\n  const fadeProps = useSpring({\n    to: { opacity: props.permissionDenied ? 1 : 0 },\n    config: config.wobbly,\n  });\n\n  return (\n    <div className={classes.root}>\n      <animated.div style={slideProps}>\n        <Paper elevation={4} className={classes.paper}>\n          <div className={classes.container}>\n            {!props.permissionDenied ? (\n              <>\n                <Typography component=\"h1\" variant=\"h6\">\n                  In order to play the game, you must grant permission to access your webcam.\n                </Typography>\n                <Typography component=\"p\">Please select a camera.</Typography>\n                <WebcamSelect />\n              </>\n            ) : (\n              <animated.div style={fadeProps}>\n                <Typography component=\"h1\" variant=\"h6\">\n                  It looks like you have denied webcam access.\n                </Typography>\n                <Typography component=\"p\">\n                  Please take a look at{' '}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://support.google.com/chrome/answer/2693767\"\n                  >\n                    this article\n                  </a>{' '}\n                  in order to enable access.\n                </Typography>\n                <Typography component=\"p\">\n                  Once your webcam has been enabled, return here to play the game!\n                </Typography>\n              </animated.div>\n            )}\n          </div>\n        </Paper>\n      </animated.div>\n    </div>\n  );\n};\n\nPermissionNeeded.propTypes = {};\n\nexport default PermissionNeeded;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport BackIcon from '@material-ui/icons/ArrowLeft';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\n\nimport WebcamSelect from './WebcamSelect';\nimport { useSpring, config, animated } from 'react-spring';\n\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport HeaderButton from './HeaderButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    '& > *': {\n      marginLeft: theme.spacing(1),\n    },\n  },\n}));\n\nconst HeaderButtonGroup = (props) => {\n  const classes = useStyles();\n\n  const {\n    controller: { onHomeScreen, handleBack, toggleAudio, audioState, openHelp },\n  } = props;\n  const styleProps = useSpring({ to: { opacity: !onHomeScreen ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div className={classes.root}>\n      {!onHomeScreen && (\n        <animated.div style={styleProps}>\n          <HeaderButton onClick={handleBack} Icon={BackIcon} />\n        </animated.div>\n      )}\n      {!props.isFullScreen && <WebcamSelect />}\n      <HeaderButton onClick={toggleAudio} Icon={audioState ? VolumeUpIcon : VolumeOffIcon} />\n      {!props.isFullScreen && <HeaderButton onClick={openHelp} Icon={ContactSupportIcon} />}\n    </div>\n  );\n};\n\nHeaderButtonGroup.propTypes = {\n  controller: PropTypes.object.isRequired,\n};\n\nexport default HeaderButtonGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/styles';\nimport { useSpring, animated, config } from 'react-spring';\nimport EnterFullScreen from '@material-ui/icons/Fullscreen';\nimport ExitFullScreen from '@material-ui/icons/FullscreenExit';\n\nimport { maxWidth } from '../lib/constants';\nimport { useWebcam } from '../context/webcam';\n\nimport logo from '../images/logo512.png';\nimport Loader from './Loader';\nimport PermissionNeeded from './PermissionNeeded';\nimport HeaderButtonGroup from './HeaderButtonGroup';\nimport HeaderButton from './HeaderButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ isFullScreen: fs }) => ({\n    maxWidth,\n    margin: '0 auto',\n    position: 'relative',\n    height: `calc(0.5625 * (100vw - ${theme.spacing(4)}px))`,\n    [`@media(min-width: ${maxWidth}px)`]: {\n      height: fs ? '100%' : `calc(0.5625 * (${maxWidth}px - ${theme.spacing(4)}px))`,\n    },\n    ...(fs\n      ? {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }\n      : {}),\n  }),\n  container: ({ isFullScreen: fs }) => ({\n    width: '100%',\n    position: 'relative',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  video: ({ flipX, isFullScreen: fs }) => ({\n    width: '100%',\n    height: '100%',\n    borderRadius: fs ? 0 : theme.spacing(1),\n    ...(flipX\n      ? {\n          'p-webkit-transform': 'scaleX(- 1)',\n          transform: 'scaleX(-1)',\n        }\n      : {}),\n  }),\n  canvas: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  children: ({ isFullScreen: fs }) => ({\n    borderRadius: fs ? 0 : theme.spacing(1),\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    bottom: 5,\n    zIndex: 1,\n    paddingLeft: fs ? 0 : theme.spacing(2),\n    paddingRight: fs ? 0 : theme.spacing(2),\n  }),\n  fullScreen: {\n    position: 'absolute',\n    bottom: theme.spacing(1.5),\n    right: ({ isFullScreen: fs }) => theme.spacing(fs ? 1.5 : 3),\n    zIndex: 20,\n  },\n  overlay: ({ overlayColor, isFullScreen }) => ({\n    background: overlayColor,\n    position: 'absolute',\n    top: 0,\n    bottom: 5,\n    left: isFullScreen ? 0 : theme.spacing(2),\n    right: isFullScreen ? 0 : theme.spacing(2),\n    borderRadius: isFullScreen ? 0 : theme.spacing(1),\n    zIndex: 0,\n  }),\n  loader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& > div': {\n      width: 100,\n      height: 100,\n    },\n  },\n  paper: {\n    top: 0,\n    bottom: 5,\n    zIndex: -1,\n    position: 'absolute',\n    left: theme.spacing(2),\n    right: theme.spacing(2),\n    borderRadius: theme.spacing(1),\n  },\n  buttons: {\n    position: 'absolute',\n    top: theme.spacing(1.5),\n    right: theme.spacing(1.5),\n    zIndex: 20,\n  },\n  logo: {\n    position: 'absolute',\n    top: theme.spacing(1.5),\n    left: theme.spacing(1.5),\n    zIndex: 20,\n    width: 34,\n  },\n}));\n\nconst Webcam = ({ overlay, ...props }) => {\n  const webcam = useWebcam();\n  const overlayColor = typeof overlay !== 'string' ? 'rgba(255,255,255,0.5)' : overlay;\n  const classes = useStyles({ ...props, ...webcam, overlayColor });\n\n  const styleProps = useSpring({ to: { opacity: !webcam.hidden ? 1 : 0 }, config: config.stiff });\n\n  return (\n    <div ref={webcam.rootRef} className={classes.root}>\n      <animated.div style={styleProps} className={classes.container}>\n        <>\n          <video\n            autoPlay={true}\n            ref={webcam.videoRef}\n            className={classes.video}\n            width={webcam.videoRef?.current?.videoWidth}\n            height={webcam.videoRef?.current?.videoHeight}\n          />\n          <canvas\n            ref={webcam.canvasRef}\n            className={classes.canvas}\n            width={webcam.videoRef?.current?.videoWidth}\n            height={webcam.videoRef?.current?.videoHeight}\n          />\n          {!webcam.hidden && overlay && <div className={classes.overlay} />}\n          {props.children && !webcam.hidden && (\n            <div className={classes.children}>{props.children}</div>\n          )}\n          {webcam.hasFullScreen && (\n            <HeaderButton\n              className={classes.fullScreen}\n              onClick={webcam.toggleFullScreen}\n              Icon={webcam.isFullScreen ? ExitFullScreen : EnterFullScreen}\n            />\n          )}\n        </>\n        {!webcam.isFullScreen && <Paper elevation={4} className={classes.paper} />}\n        {webcam.isFullScreen && (\n          <>\n            <div className={classes.buttons}>\n              <HeaderButtonGroup controller={props.headerController} isFullScreen />\n            </div>\n            <img className={classes.logo} alt=\"Carbon Copy Logo\" src={logo} />\n          </>\n        )}\n      </animated.div>\n      {webcam.permissionNeeded ? (\n        <PermissionNeeded permissionDenied={webcam.permissionDenied} />\n      ) : (\n        webcam.hidden && (\n          <div className={classes.loader}>\n            <div>\n              <Loader color=\"#000\" />\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nWebcam.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Webcam;\n","export const maxWidth = 1100;\n\nexport const numShippedMasks = 3;\n\nexport const DEBUG = process.env.NODE_ENV !== 'production';\n\nexport const PEER_ID_BASE = 'CARBON_COPY_';\n\nexport const MIN_NAME_LENGTH = 5;\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n  ever: {\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  },\n}));\n\nconst HelpDialog = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"information\"\n      open={open}\n      className={classes.dialogRoot}\n    >\n      <MuiDialogTitle disableTypography id=\"information\">\n        <Typography variant=\"h5\">Carbon Copy Fun!</Typography>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </MuiDialogTitle>\n      <MuiDialogContent dividers className={classes.dialogContent}>\n        <Typography component=\"h2\" variant=\"h6\">\n          Setup\n        </Typography>\n        <Typography gutterBottom>\n          Place your webcam so that your entire body fits within the frame, and ensure there is\n          enough space around you to move safely.\n        </Typography>\n        <Typography gutterBottom>\n          Be prepared to move side to side, forward and back, and even crouch.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h6\">\n          Performance\n        </Typography>\n        <Typography gutterBottom>\n          This game relies on state-of-the-art computer vision algorithms in order to detect the\n          location of your body. This requires significant compute power. Don't be afraid if you\n          hear your computer making noise.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h6\">\n          Privacy\n        </Typography>\n        <Typography gutterBottom>\n          Although this game requires your webcam to function, no personal images or data are\n          collected by this application.\n        </Typography>\n      </MuiDialogContent>\n    </Dialog>\n  );\n};\n\nHelpDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default memo(HelpDialog);\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport { maxWidth } from '../lib/constants';\nimport HeaderButtonGroup from './HeaderButtonGroup';\nimport HelpDialog from './HelpDialog';\nimport carbonCopy from '../images/logo512.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    width: '100%',\n    maxWidth,\n    display: 'flex',\n    margin: '0 auto',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n  },\n  ever: {\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > img': {\n      width: 34,\n      marginRight: theme.spacing(1),\n    },\n    '& > h1': {},\n  },\n}));\n\nconst GlobalHeader = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.title}>\n          <img src={carbonCopy} alt=\"Carbon Copy Logo\" />\n          <Typography variant=\"h4\" component=\"h1\">\n            Carbon Copy\n          </Typography>\n        </div>\n        <HeaderButtonGroup controller={props.controller} />\n      </div>\n      <HelpDialog open={props.controller.helpOpen} handleClose={props.controller.closeHelp} />\n    </>\n  );\n};\n\nGlobalHeader.propTypes = {\n  controller: PropTypes.object.isRequired,\n};\n\nexport default memo(GlobalHeader);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport { useGame } from '../components/Game';\nimport { useWebcam } from '../context/webcam';\nimport { animated, config, useSpring } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst DefaultHeader = (props) => {\n  const classes = useStyles();\n  const webcam = useWebcam();\n\n  const game = useGame();\n\n  const styleProps = useSpring({ to: { opacity: !webcam.hidden ? 1 : 0 }, config: config.stiff });\n\n  const text = webcam.hidden\n    ? ''\n    : game?.screen?.state?.mode ||\n      (game?.screen?.state?.screen === 'play' ? 'Choose Mode' : 'Select Players');\n\n  return (\n    <Typography component=\"h1\" variant=\"h6\" className={classes.heading}>\n      <animated.div style={styleProps}>{text}</animated.div>\n    </Typography>\n  );\n};\n\nDefaultHeader.propTypes = {};\n\nexport default DefaultHeader;\n","export const screenTypes = {\n  SET_SCREEN: 'set_screen',\n  SET_PLAYER_MODE: 'set_player_mode',\n  SET_GAME_MODE: 'set_game_mode',\n  REVERSE: 'reverse_state',\n  RESET: 'reset_state',\n};\n\nexport const SINGLE_PLAYER = 'Single Player';\nexport const MULTIPLAYER = 'Multi Player';\n\nexport const screenStates = {\n  screen: {\n    DEFAULT: 'start',\n    PLAY: 'play',\n  },\n  players: {\n    SINGLE_PLAYER,\n    MULTIPLAYER,\n    DEFAULT: null,\n  },\n  mode: {\n    [SINGLE_PLAYER]: {\n      PRACTICE: 'Practice',\n      SURVIVAL: 'Survival',\n      TIME_ATTACK: 'Time Attack',\n    },\n    [MULTIPLAYER]: {\n      'LOCAL': 'Local',\n      'REMOTE': 'P2P',\n    },\n    DEFAULT: null,\n  },\n};\n\nexport const screenStatesArrays = Object.entries(screenStates).reduce(\n  (acc, [stateKey, statesObj]) => ({\n    ...acc,\n    [stateKey]:\n      stateKey !== 'mode'\n        ? Object.values(statesObj).filter((_) => _)\n        : Object.entries(statesObj).reduce(\n            (modeAcc, [playerModeKey, playerModesObj]) => ({\n              ...modeAcc,\n              [playerModeKey]: playerModesObj === null ? null : Object.values(playerModesObj), // check for the default: null thing and get rid of it\n            }),\n            {},\n          ),\n  }),\n  {},\n);\n\nexport const initialScreenState = {\n  screen: screenStates.screen.DEFAULT,\n  mode: screenStates.mode.DEFAULT,\n  players: screenStates.players.DEFAULT,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DefaultHeader from '../DefaultHeader';\nimport { screenStates } from '../../lib/screenConstants';\n\nconst Headers = {\n  [screenStates.screen.DEFAULT]: {\n    [screenStates.players.DEFAULT]: null,\n  },\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: null,\n    [screenStates.players.MULTIPLAYER]: null,\n  },\n};\n\nconst ScreenHeader = (props) => {\n  const { screen, players } = props.screenState;\n\n  const HeaderContent = Headers[screen]?.[players] || DefaultHeader;\n\n  return (\n    <header>\n      <HeaderContent />\n    </header>\n  );\n};\n\nScreenHeader.propTypes = {\n  screenState: PropTypes.object.isRequired,\n};\n\nexport default ScreenHeader;\n","const Null = () => null;\n\nexport default Null;\n","import hexToRGB from 'hex-rgb';\n\nexport const rawScoreToTenBinScore = (score) => {\n  // Takes in score from [0-100] and returns score [1-10]\n  const lowThresh = 25;\n  const highThresh = 88;\n  const p = (score - lowThresh) / (highThresh - lowThresh);\n  return Math.max(1, Math.min(10, Math.round(p * 10)));\n};\n\nexport const tenBinScoreToPercent = (score) => {\n  // Returns a percent value between [0.0, 100.0]\n  score = Math.min(Math.max(score, 0), 10);\n  return (score / 10) * 100;\n};\n\nexport const scoreToColor = (score, alpha) => {\n  // Returns a hex color value from reg to green based on score from 0-100\n  // Using from: https://gist.github.com/mlocati/7210513\n  var r,\n    g,\n    b = 0;\n  if (score < 50) {\n    r = 255;\n    g = Math.round(5.1 * score);\n  } else {\n    g = 255;\n    r = Math.round(510 - 5.1 * score);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  const hex = '#' + ('000000' + h.toString(16)).slice(-6);\n\n  if (alpha) {\n    try {\n      const { red, green, blue } = hexToRGB(hex);\n      return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    } catch (e) {\n      console.error(e, { score, alpha, hex });\n      return 'rgba(255, 255, 255, 0)';\n    }\n  }\n\n  return hex;\n};\n\nexport const tenBinScoreToColor = (score, alpha) =>\n  scoreToColor(tenBinScoreToPercent(score), alpha);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  masks: {\n    padding: theme.spacing(2),\n    background: 'rgba(255,255,255,0.5)',\n  },\n  masksHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  masksList: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-around',\n  },\n  maskContainer: {\n    marginTop: theme.spacing(2),\n  },\n  imgContainer: {\n    width: 200,\n    position: 'relative',\n    border: '1px solid grey',\n    padding: theme.spacing(0.5),\n    borderRadius: theme.spacing(1),\n    '&:hover': {\n      '& > div': {\n        background: 'rgba(255,0,0,0.65)',\n      },\n    },\n  },\n  img: {\n    width: '100%',\n    background: 'rgba(0,0,0,0)',\n  },\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n  actions: {\n    '& > button': {\n      marginRight: theme.spacing(1),\n      '& :last-of-type': {\n        marginRight: 0,\n      },\n    },\n  },\n}));\n\nconst MasksGrid = (props) => {\n  const classes = useStyles();\n\n  const {\n    masks,\n    onClose,\n    title,\n    actions,\n    actionButtons,\n    getDataUri,\n    getImageChild,\n    getPaperProps,\n    PaperProps = {},\n  } = props;\n\n  return (\n    !!masks?.length && (\n      <Paper className={classes.masks} elevation={4}>\n        <div className={classes.masksHeader}>\n          {typeof title === 'string' ? (\n            <Typography variant=\"h6\" component=\"h3\">\n              {title}\n            </Typography>\n          ) : (\n            title || null\n          )}\n          {actions || actionButtons ? (\n            <div className={classes.actions}>\n              {actionButtons.map(({ Icon, onClick, key }) => (\n                <IconButton key={key} size=\"small\" onClick={onClick}>\n                  <Icon />\n                </IconButton>\n              ))}\n            </div>\n          ) : (\n            onClose && (\n              <div className={classes.actions}>\n                <IconButton size=\"small\" onClick={onClose}>\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            )\n          )}\n        </div>\n        <ul className={classes.masksList}>\n          {masks.map((maskItem, i) => {\n            const dataUri = getDataUri ? getDataUri(maskItem) : maskItem;\n            const paperProps = getPaperProps ? getPaperProps(maskItem, i, masks) : {};\n\n            return (\n              <li key={dataUri} className={classes.maskContainer}>\n                <Paper\n                  elevation={4}\n                  className={classes.imgContainer}\n                  {...PaperProps}\n                  {...paperProps}\n                >\n                  {getImageChild && getImageChild(maskItem, i)}\n                  <img src={dataUri} className={classes.img} alt={`mask #${i}`} />\n                </Paper>\n              </li>\n            );\n          })}\n        </ul>\n      </Paper>\n    )\n  );\n};\n\nMasksGrid.propTypes = {\n  title: PropTypes.node,\n  masks: PropTypes.array,\n  actions: PropTypes.node,\n  onClose: PropTypes.func,\n  getDataUri: PropTypes.func,\n  PaperProps: PropTypes.object,\n  getPaperProps: PropTypes.func,\n  getImageChild: PropTypes.func,\n  actionButtons: PropTypes.array,\n};\n\nexport default MasksGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { tenBinScoreToColor } from '../lib/score';\nimport { useMemo } from 'react';\nimport MasksGrid from './MasksGrid';\nimport { useCallback } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  score: {\n    textAlign: 'right',\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nconst ScoreResults = ({ results, handleClose, label, ...props }) => {\n  const classes = useStyles();\n\n  const title = useMemo(() => {\n    const gameScoreAverage = results.reduce((acc, { score }) => acc + score, 0) / results.length;\n    const fixedGameScore = gameScoreAverage.toFixed(1);\n    const title = (\n      <Typography variant=\"h6\" component=\"h3\">\n        {label ? label : <>Round Score: {fixedGameScore}</>}\n      </Typography>\n    );\n\n    return title;\n  }, [results, label]);\n\n  const getDataUri = useCallback(({ dataUri }) => dataUri, []);\n  const getPaperProps = useCallback(\n    ({ score }) => ({ style: { background: tenBinScoreToColor(score, 0.4) } }),\n    [],\n  );\n  const getImageChild = useCallback(\n    ({ score }) => <Typography className={classes.score}>{score}</Typography>,\n    [classes.score],\n  );\n\n  return (\n    <MasksGrid\n      title={title}\n      masks={results}\n      onClose={handleClose}\n      getDataUri={getDataUri}\n      getPaperProps={getPaperProps}\n      getImageChild={getImageChild}\n      {...props}\n    />\n  );\n};\n\nScoreResults.propTypes = {\n  label: PropTypes.string,\n  handleClose: PropTypes.func,\n  results: PropTypes.array.isRequired,\n};\n\nexport default ScoreResults;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport React, { useMemo, useCallback } from 'react';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayIcon from '@material-ui/icons/PlayCircleOutline';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nimport MasksGrid from './MasksGrid';\n\nconst useStyles = makeStyles((theme) => ({\n  removeMask: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    position: 'absolute',\n    transition: 'all 100ms',\n    justifyContent: 'center',\n    '&:hover': {\n      '& > button': {\n        display: 'inherit',\n      },\n    },\n  },\n  iconBtn: {\n    display: 'none',\n    color: 'black',\n    backgroundColor: 'rgba(255,255,255,0.5)',\n    '&:hover': {\n      backgroundColor: 'rgba(255,255,255,0.75)',\n    },\n    '&:active, &:focused': {\n      backgroundColor: 'rgba(255,255,255,0.9)',\n    },\n  },\n}));\n\nconst CapturedMasks = (props) => {\n  const classes = useStyles();\n\n  const { captureMasks, handlePlay } = props;\n\n  const actionButtons = useMemo(\n    () => [\n      {\n        key: 'play',\n        Icon: PlayIcon,\n        onClick: handlePlay,\n      },\n      {\n        key: 'download',\n        Icon: DownloadIcon,\n        onClick: captureMasks.downloadMasks,\n      },\n      {\n        key: 'clear',\n        Icon: CloseIcon,\n        onClick: captureMasks.removeAllMasks,\n      },\n    ],\n    [captureMasks.downloadMasks, captureMasks.removeAllMasks, handlePlay],\n  );\n\n  const getDataUri = useCallback(({ binary: dataUri }) => dataUri, []);\n\n  const getImageChild = useCallback(\n    (maskItem, i) => (\n      <div className={classes.removeMask}>\n        <IconButton name={i} className={classes.iconBtn} onClick={captureMasks.removeMask}>\n          <DeleteForeverIcon fontSize=\"large\" />\n        </IconButton>\n      </div>\n    ),\n    [captureMasks.removeMask, classes.removeMask, classes.iconBtn],\n  );\n\n  return (\n    <MasksGrid\n      title=\"Candidate Masks\"\n      getDataUri={getDataUri}\n      masks={captureMasks.masks}\n      actionButtons={actionButtons}\n      getImageChild={getImageChild}\n    />\n  );\n};\n\nCapturedMasks.propTypes = {\n  handlePlay: PropTypes.func,\n  captureMasks: PropTypes.object.isRequired,\n};\n\nexport default CapturedMasks;\n","import React, { useMemo } from 'react';\nimport { useGame } from '../../Game';\nimport ScoreResults from '../../ScoreResults';\nimport CapturedMasks from '../../CapturedMasks';\nimport { tenBinScoreToColor } from '../../../lib/score';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  score: {\n    textAlign: 'right',\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nconst BasicFooter = (props) => {\n  const game = useGame();\n  const classes = useStyles();\n\n  const showTimeAttackResults = useMemo(\n    () =>\n      game?.mode?.name === 'time attack'\n        ? {\n            getPaperProps: ({ score }) => ({\n              style: { background: tenBinScoreToColor(Math.max(10.5 - score, 0), 0.4) },\n            }),\n            getImageChild: ({ score }) => (\n              <Typography className={classes.score}>{score}s</Typography>\n            ),\n          }\n        : {},\n    [game, classes.score],\n  );\n\n  if (!game.mode) return null;\n\n  const { simpleGame, captureMasks, handlePlayCapturedMasks, resultsText, name } = game.mode;\n\n  const showResults = name === 'time attack' ? !game.loop.looping : true;\n\n  return (\n    <>\n      {showResults && (\n        <ScoreResults\n          label={resultsText}\n          results={simpleGame.scores}\n          handleClose={props.hideClose ? null : simpleGame.clearScores}\n          {...showTimeAttackResults}\n        />\n      )}\n      {captureMasks && (\n        <CapturedMasks captureMasks={captureMasks} handlePlay={handlePlayCapturedMasks} />\n      )}\n    </>\n  );\n};\n\nexport default BasicFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ flip, height = 10, background = 'rgba(255,255,255,0)' }) => ({\n    height,\n    background,\n    width: '100%',\n    borderRadius: 50,\n    transform: `scaleX(${flip ? -1 : 1})`,\n    pWebkitTransform: `scaleX(${flip ? -1 : 1})`,\n  }),\n  filler: ({ completed, color }) => ({\n    height: '100%',\n    textAlign: 'left',\n    background: color,\n    width: `${completed}%`,\n    borderRadius: 'inherit',\n  }),\n}));\n\nconst ProgressBar = (props) => {\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.filler} />\n    </div>\n  );\n};\n\nProgressBar.propTypes = {\n  flip: PropTypes.bool,\n  color: PropTypes.string.isRequired,\n  completed: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ProgressBar;\n","/* global cv:false */\nimport inside from 'point-in-polygon';\n\nexport const jitterMask = (mask) => {\n  // Input mask as ImageData\n  let maskMatIn = cv.matFromImageData(mask);\n  const height = maskMatIn.rows;\n  const width = maskMatIn.cols;\n\n  // JITTER PARAMS\n  const maxRotate = 10.0; // Random Rotate +/-\n  const minScaleJitter = 0.9;\n  const maxScaleJitter = 1.1;\n  const maxXJitter = 300;\n\n  // Do a random rotate\n  let randomRotate = (Math.random() - 0.5) * (2 * maxRotate);\n  let maskMat = new cv.Mat();\n  let center = new cv.Point(width / 2, height / 2);\n\n  let M = cv.getRotationMatrix2D(center, randomRotate, 1.0);\n  cv.warpAffine(\n    maskMatIn,\n    maskMat,\n    M,\n    maskMatIn.size(),\n    cv.INTER_NEAREST,\n    cv.BORDER_CONSTANT,\n    new cv.Scalar(0, 0, 0, 0),\n  );\n\n  let rgbaPlanes = new cv.MatVector();\n  cv.split(maskMat, rgbaPlanes);\n  // Step 1. Find ROI\n  let roi_x_min = -1,\n    roi_y_min = -1,\n    roi_x_max = -1,\n    roi_y_max = -1;\n  let res1 = new cv.Mat();\n  let res2 = new cv.Mat();\n  cv.reduce(rgbaPlanes.get(2), res1, 0, cv.REDUCE_MAX); // Results in Width len vector\n  for (let i = 0; i < width; ++i) {\n    if (roi_x_min === -1 && res1.data[i] > 0) {\n      roi_x_min = i;\n      break;\n    }\n  }\n  for (let i = width - 1; i >= 0; i--) {\n    if (roi_x_max === -1 && res1.data[i] > 0) {\n      roi_x_max = i;\n      break;\n    }\n  }\n  cv.reduce(rgbaPlanes.get(2), res1, 1, cv.REDUCE_MAX); // Results in Height len vector\n  for (let i = 0; i < height; ++i) {\n    if (roi_y_min === -1 && res1.data[i] > 0) {\n      roi_y_min = i;\n      break;\n    }\n  }\n  for (let i = height - 1; i >= 0; i--) {\n    if (roi_y_max === -1 && res1.data[i] > 0) {\n      roi_y_max = i;\n      break;\n    }\n  }\n  const roi_width = roi_x_max - roi_x_min + 1;\n  const roi_height = roi_y_max - roi_y_min + 1;\n  let rect_obj = new cv.Rect(roi_x_min, roi_y_min, roi_width, roi_height);\n  res1 = maskMat.roi(rect_obj);\n\n  const rect1_width = res1.cols;\n  const rect1_height = res1.rows;\n\n  const maxWidthResize = width / rect1_width;\n  const maxHeightResize = height / rect1_height;\n  const maxResize = Math.min(maxWidthResize, maxHeightResize);\n\n  const randomScale = Math.min(\n    minScaleJitter + Math.random() * (maxScaleJitter - minScaleJitter),\n    maxResize,\n  );\n\n  let dsize = new cv.Size(res1.cols * randomScale, res1.rows * randomScale);\n  cv.resize(res1, res2, dsize, 0, 0, cv.INTER_NEAREST);\n\n  const rect_width = res2.cols;\n  const rect_height = res2.rows;\n\n  // Shift X such that the midpoint can only go at most +/- pixels\n  const centeredLeft = (width - rect_width) / 2; // Left point when rect is centered (also the most it can jitter)\n  const xJitter = (Math.random() - 0.5) * (2 * Math.min(maxXJitter, centeredLeft));\n  const randomX = centeredLeft + xJitter;\n\n  let rect_paste = new cv.Rect(randomX, height - rect_height, rect_width, rect_height);\n\n  // Copy and return\n\n  let output = new cv.Mat.zeros(height, width, maskMat.type());\n  res2.copyTo(output.roi(rect_paste));\n\n  const jitteredResult = new ImageData(\n    new Uint8ClampedArray(output.data),\n    output.cols,\n    output.rows,\n  );\n\n  maskMat.delete();\n  maskMatIn.delete();\n  res1.delete();\n  res2.delete();\n  output.delete();\n  return jitteredResult;\n};\n\nexport const polygonToArray = (polygon, width, height) => {\n  const bytes = new Uint8ClampedArray(width * height * 4);\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n    const isIn = Number(inside([x, y], polygon)) * 255;\n    bytes[i * 4] = isIn;\n    bytes[i * 4 + 1] = isIn;\n    bytes[i * 4 + 2] = isIn;\n    bytes[i * 4 + 3] = isIn ? 128 : 0;\n  }\n  return new ImageData(bytes, width, height);\n};\n\nexport const getOpenCvMaskFromSegmentation = (segmentation, flipped) => {\n  const { data, width, height } = segmentation;\n  const binaryBytes = new Uint8ClampedArray(segmentation.data.length * 4);\n  // TODO: See if we can directly create CVMat from segmentation.data.\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const isPerson = data[i];\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    binaryBytes[bytes_index * 4] = isPerson ? 255 : 0; // red\n    binaryBytes[bytes_index * 4 + 1] = isPerson ? 255 : 0; // green\n    binaryBytes[bytes_index * 4 + 2] = isPerson ? 255 : 0; // blue\n    binaryBytes[bytes_index * 4 + 3] = isPerson ? 255 : 0; // alpha\n  }\n  let binaryImageData = new ImageData(binaryBytes, width, height);\n\n  // Load data into Mat.\n  let segData = cv.matFromImageData(binaryImageData);\n\n  // Create a single channel mask.\n  let rgbaPlanes = new cv.MatVector();\n  cv.split(segData, rgbaPlanes);\n  let pre_mask = new cv.Mat();\n  // Threshold on one channel (doesn't matter which one)\n  cv.threshold(rgbaPlanes.get(0), pre_mask, 128, 1, cv.THRESH_BINARY); // Mask is 0s and 1s, type CV_8UC1\n\n  // Use findContours/drawContours to remove small blobs.\n  // See example: https://docs.opencv.org/3.4/d5/daa/tutorial_js_contours_begin.html\n  // TODO: This only updates the overlay. Also update the Mask.\n  let contours = new cv.MatVector();\n  let hierarchy = new cv.Mat();\n  cv.findContours(pre_mask, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n  let mask = cv.Mat.zeros(pre_mask.rows, pre_mask.cols, cv.CV_8UC1);\n  let area = 0;\n  let minAreaThreshold = 10000; // Can change this, starting off with 100x100.\n  for (let i = 0; i < contours.size(); ++i) {\n    area = cv.contourArea(contours.get(i));\n    if (area > minAreaThreshold) {\n      cv.drawContours(mask, contours, i, [1, 1, 1, 1], -1 /*fill*/, cv.LINE_8, hierarchy, 100);\n    }\n  }\n\n  // Cleanup\n  segData.delete();\n  rgbaPlanes.delete();\n\n  return mask;\n};\n\nexport const getSegmentationeOverlayAndBinaryImageData = (segmentation, flipped) => {\n  const mask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n\n  // Create a Blue opaque overlay with a solid Green border.\n  // NOTE: Images are in RGBA format\n  let rgbaPlanes = new cv.MatVector();\n  let overlay = cv.Mat.zeros(mask.rows, mask.cols, cv.CV_8UC4);\n  cv.split(overlay, rgbaPlanes);\n  // Fill blue channel and alpha using the mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], mask); // Blue\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], mask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(mask, borderMask, M, anchor, 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue());\n  cv.subtract(borderMask, mask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(2).setTo([255, 0, 0, 0], borderMask); // Blue\n  // rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, overlay);\n  const overlayImageData = new ImageData(\n    new Uint8ClampedArray(overlay.data),\n    overlay.cols,\n    overlay.rows,\n  );\n  // Cleanup\n  rgbaPlanes.delete();\n  mask.delete();\n  overlay.delete();\n  M.delete();\n  borderMask.delete();\n\n  // TODO: only return one image here.\n  return { overlayImageData, binaryImageData: overlayImageData };\n};\n\nexport const getScore = (targetImageData, segmentation, flipped) => {\n  // Just get the score\n  const { data, width, height } = segmentation;\n\n  let union = 0;\n  let intersection = 0;\n  const personPixelScale = 1.3; // Weight of a person pixel\n\n  for (let i = 0; i < height * width; ++i) {\n    const x = i % width;\n    const y = parseInt(i / width);\n\n    const bytes_index = flipped ? width - x + width * y : i;\n\n    const isPerson = data[i];\n    const isInPolygon = !!targetImageData.data[bytes_index * 4 + 2];\n    const isIntersection = isInPolygon && isPerson;\n\n    const pixelWeight = isPerson ? personPixelScale : 1.0;\n\n    if (isIntersection) {\n      intersection += pixelWeight;\n    }\n    if (isPerson || isInPolygon) {\n      union += pixelWeight;\n    }\n  }\n  const score = Math.round((intersection / (union + 0.0000001)) * 100);\n  return score;\n};\n\nexport const getScoreAndOverlayForSegmentationAndImageData = (\n  targetImageData,\n  segmentation,\n  flipped,\n) => {\n  // Create a visualization of the new segmentation.\n  const segmentationMask = getOpenCvMaskFromSegmentation(segmentation, flipped);\n  let rgbaPlanes = new cv.MatVector();\n  let segOverlay = cv.Mat.zeros(segmentationMask.rows, segmentationMask.cols, cv.CV_8UC4);\n  cv.split(segOverlay, rgbaPlanes);\n  // Fill green channel and alpha using the mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], segmentationMask); // Green\n  rgbaPlanes.get(3).setTo([128, 0, 0, 0], segmentationMask); // Alpha\n  // Get a border mask.\n  let borderSize = 10;\n  let borderMask = new cv.Mat();\n  let M = cv.Mat.ones(borderSize, borderSize, cv.CV_8U);\n  let anchor = new cv.Point(-1, -1);\n  cv.dilate(\n    segmentationMask,\n    borderMask,\n    M,\n    anchor,\n    1,\n    cv.BORDER_CONSTANT,\n    cv.morphologyDefaultBorderValue(),\n  );\n  cv.subtract(borderMask, segmentationMask, borderMask);\n  // Fill solid green using the border mask.\n  rgbaPlanes.get(1).setTo([255, 0, 0, 0], borderMask); // Green\n  rgbaPlanes.get(3).setTo([255, 0, 0, 0], borderMask); // Alpha\n  // Merge into final result.\n  cv.merge(rgbaPlanes, segOverlay);\n  const segOverlayImageData = new ImageData(\n    new Uint8ClampedArray(segOverlay.data),\n    segOverlay.cols,\n    segOverlay.rows,\n  );\n\n  // Create a mask from the targetImageData.\n  let targetData = cv.matFromImageData(targetImageData);\n  let targetRgbaPlanes = new cv.MatVector();\n  cv.split(targetData, targetRgbaPlanes);\n\n  // Merge the two images.\n  let mergedImage = new cv.Mat();\n  cv.addWeighted(segOverlay, 0.5, targetData, 0.5, 0.0, mergedImage);\n  const mergedOverlayImageData = new ImageData(\n    new Uint8ClampedArray(mergedImage.data),\n    mergedImage.cols,\n    mergedImage.rows,\n  );\n\n  const score = getScore(targetImageData, segmentation, flipped);\n\n  // Cleanup\n  rgbaPlanes.delete();\n  segmentationMask.delete();\n  segOverlay.delete();\n  M.delete();\n  borderMask.delete();\n  mergedImage.delete();\n\n  return { score, targetOverlay: mergedOverlayImageData, segOverlay: segOverlayImageData };\n};\n\nexport const drawPolygon = (ctx, polygon, color = 'rgba(255, 255, 255, 0.5)') => {\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(polygon[0][0], polygon[0][1]);\n  const vertices = polygon.slice(1);\n  vertices.forEach(([x, y]) => {\n    ctx.lineTo(x, y);\n  });\n  ctx.closePath();\n  ctx.fill();\n};\n\nexport const flipPolygon = (polygon, width) => polygon.map(([x, y]) => [width - x, y]);\n\nexport const inflatePolygon = (width, height) => (polygon) =>\n  polygon.map(([x, y]) => [x * width, y * height]);\n\nexport const saveAs = (blob, filename) => {\n  if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n    return navigator.msSaveOrOpenBlob(blob, filename);\n  } else if (typeof navigator.msSaveBlob !== 'undefined') {\n    return navigator.msSaveBlob(blob, filename);\n  } else {\n    var elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    elem.style = 'display:none;opacity:0;color:transparent;';\n    (document.body || document.documentElement).appendChild(elem);\n    if (typeof elem.click === 'function') {\n      elem.click();\n    } else {\n      elem.target = '_blank';\n      elem.dispatchEvent(\n        new MouseEvent('click', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n        }),\n      );\n    }\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getMaskName = (num) => `set${num}.zip`;\n","import JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport { useCallback, useState, useMemo } from 'react';\n\nimport { getMaskName } from '../lib/util';\nimport { useWebcam } from '../context/webcam';\nimport { numShippedMasks } from '../lib/constants';\n\nexport const useZip = (setMasks) => {\n  const webcam = useWebcam();\n  const [zipLoading, setZipLoading] = useState(false);\n\n  const loadZippedMasks = useCallback(\n    async (file) => {\n      const data = await JSZip.loadAsync(file);\n      const binaryMasks = await Promise.all(\n        data\n          .filter((name) => name.endsWith('.png'))\n          .map(({ name }) => data.file(name).async('base64')),\n      );\n\n      try {\n        const masksAsImageData = await Promise.all(\n          binaryMasks.map((b64) => webcam.dataUriToImageData(`data:image/png;base64,${b64}`)),\n        );\n        setMasks(masksAsImageData);\n      } catch {}\n\n      setZipLoading(false);\n    },\n    [setMasks, webcam],\n  );\n\n  const handleZipInputChange = useCallback(\n    async ([file]) => {\n      if (file.type !== 'application/zip') {\n        console.error('Expected a zip file but got', file.type);\n        return;\n      }\n\n      setZipLoading(true);\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadPreparedMasks = useCallback(\n    async (filename) => {\n      if (!filename) return;\n\n      setZipLoading(true);\n      const file = await new JSZip.external.Promise((resolve, reject) => {\n        JSZipUtils.getBinaryContent(process.env.PUBLIC_URL + `/masks/${filename}`, (err, data) => {\n          if (err) reject(err);\n          else resolve(data);\n        });\n      });\n\n      await loadZippedMasks(file);\n    },\n    [loadZippedMasks],\n  );\n\n  const handleLoadRandomMaskSet = useCallback(async () => {\n    const num = Math.floor(Math.random() * numShippedMasks);\n    return handleLoadPreparedMasks(getMaskName(num + 1));\n  }, [handleLoadPreparedMasks]);\n\n  const data = useMemo(\n    () => ({\n      loading: zipLoading,\n      handleZipInputChange,\n      handleLoadRandomMaskSet,\n      handleLoadPreparedMasks,\n    }),\n    [zipLoading, handleZipInputChange, handleLoadPreparedMasks, handleLoadRandomMaskSet],\n  );\n\n  return data;\n};\n","import { useCallback } from 'react';\n\nfunction makeSound(src) {\n  // Create a instance of AudioContext interface\n  window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n  var context = new AudioContext();\n  const source = context.createBufferSource();\n\n  var myRequest = new Request(src);\n\n  return fetch(myRequest)\n    .then(function (response) {\n      return response.arrayBuffer();\n    })\n    .then(function (buffer) {\n      context.decodeAudioData(buffer, function (decodedData) {\n        source.buffer = decodedData;\n        source.connect(context.destination);\n      });\n      return source.start(0);\n    });\n}\n\nexport const useSfx = (audioRef) => {\n  if (!audioRef) {\n    throw new Error('audioRef is required when calling useSfx');\n  }\n\n  const play = useCallback(\n    (soundName) => {\n      if (!audioRef.current) return;\n      return makeSound(soundName);\n    },\n    [audioRef],\n  );\n\n  const playSuccessSound = useCallback(\n    () => play(process.env.PUBLIC_URL + '/sounds/metallic_clank.ogg'),\n    [play],\n  );\n\n  const playFailureSound = useCallback(\n    () => play(process.env.PUBLIC_URL + '/sounds/glass_shatter.ogg'),\n    [play],\n  );\n\n  const playCameraSound = useCallback(() => play(process.env.PUBLIC_URL + '/sounds/camera.ogg'), [\n    play,\n  ]);\n\n  return { playSuccessSound, playFailureSound, playCameraSound };\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nconst synth = window.speechSynthesis;\n\nexport const useSpeech = (audioRef) => {\n  if (!audioRef) {\n    throw new Error('audioRef is required when calling useSpeech');\n  }\n\n  const [voices, setVoices] = useState(null);\n  const [voice, setVoice] = useState(null);\n\n  useEffect(() => {\n    if (!voices) {\n      const allVoices = synth.getVoices();\n      setVoices(allVoices);\n      setVoice(allVoices[0]);\n    }\n  }, [voices]);\n\n  const say = useCallback(\n    (text) => {\n      if (!audioRef.current) return;\n\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.voice = voice;\n      synth.speak(utterance);\n    },\n    [voice, audioRef],\n  );\n\n  const countdown = useCallback(\n    (from, { onEnd, onEach } = {}) => {\n      if (onEnd) setTimeout(onEnd, from * 1000);\n      Array.from({ length: from }).forEach((_, idx) => {\n        const num = from - idx;\n        setTimeout(() => {\n          say(num);\n          if (onEach) onEach(num);\n        }, idx * 1000);\n      });\n    },\n    [say],\n  );\n\n  return { say, countdown };\n};\n","import { useMemo, useRef, useState, useEffect, useCallback } from 'react';\nimport { useSfx } from './sfx';\nimport { useSpeech } from './speech';\n\nconst LS_AUDIO = '__audio_muted__';\n\nexport const useAudioController = () => {\n  const audioRef = useRef(true);\n  const [audioState, setAudioState] = useState(true);\n\n  const speech = useSpeech(audioRef);\n  const sfx = useSfx(audioRef);\n\n  useEffect(() => {\n    const muteAudio = localStorage.getItem(LS_AUDIO);\n\n    if (muteAudio) {\n      setAudioState(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (audioState && !audioRef.current) {\n      audioRef.current = true;\n      localStorage.removeItem(LS_AUDIO);\n    } else if (!audioState && audioRef.current) {\n      audioRef.current = false;\n      localStorage.setItem(LS_AUDIO, 'true');\n    }\n  }, [audioState]);\n\n  const toggle = useCallback(() => {\n    setAudioState((state) => !state);\n  }, []);\n\n  const audio = useMemo(\n    () => ({\n      state: audioState,\n      stateRef: audioRef,\n      handlers: { toggle, speech, sfx },\n    }),\n    [audioState, toggle, speech, sfx],\n  );\n\n  return audio;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useAudioController } from '../hooks/audioController';\n\nexport const audioContext = createContext();\n\nexport const useAudio = () => {\n  const state = useContext(audioContext);\n\n  if (state === undefined) {\n    throw new Error('useAudio must be used within a AudioProvider');\n  }\n\n  return state;\n};\n\nconst AudioProvider = ({ children }) => {\n  const context = useAudioController();\n\n  return <audioContext.Provider value={context}>{children}</audioContext.Provider>;\n};\n\nexport default AudioProvider;\n","import { useMemo, useRef, useState, useCallback } from 'react';\nimport { jitterMask } from '../lib/util';\n\n// set masks, iterate masks, retain ref to current mask\nexport const useIterateMask = () => {\n  const masksRef = useRef([]);\n  const maskRef = useRef(null);\n  const maskIdxRef = useRef(0);\n  const [masks, _setMasks] = useState([]);\n\n  const setMasks = useCallback((newMasks) => {\n    _setMasks(newMasks);\n    masksRef.current = typeof newMasks === 'function' ? newMasks(masksRef.current) : newMasks;\n  }, []);\n\n  const reset = useCallback(() => {\n    maskIdxRef.current = 0;\n    maskRef.current = null;\n  }, []);\n\n  const shuffle = useCallback(() => {\n    const array = masks.slice();\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    setMasks(array);\n    masksRef.current = array;\n  }, [masks, setMasks]);\n\n  const resetAndShuffle = useCallback(() => {\n    maskIdxRef.current = 0;\n    maskRef.current = null;\n    shuffle();\n  }, [shuffle]);\n\n  const next = useCallback((jitter = false) => {\n    const currentMask = masksRef.current[maskIdxRef.current];\n\n    if (!currentMask) {\n      maskRef.current = null;\n      maskIdxRef.current = 0;\n\n      return null;\n    }\n\n    if (jitter) {\n      const mask = jitterMask(currentMask);\n      maskRef.current = mask;\n      maskIdxRef.current++;\n      return mask;\n    } else {\n      maskRef.current = currentMask;\n      maskIdxRef.current++;\n      return currentMask;\n    }\n  }, []);\n\n  const getNumMasks = useCallback(() => masksRef.current.length, []);\n\n  const random = useCallback(() => {\n    let orig_mask = masks[Math.floor(Math.random() * masks.length)];\n    // Always jittering for random (used by survival)\n    const mask = jitterMask(orig_mask);\n    maskRef.current = mask;\n    return mask;\n  }, [masks]);\n\n  return useMemo(\n    () => ({\n      next,\n      reset,\n      random,\n      maskRef,\n      setMasks,\n      maskIdxRef,\n      getNumMasks,\n      resetAndShuffle,\n      hasMasks: !!masks.length,\n    }),\n    [next, masks, random, reset, setMasks, resetAndShuffle, getNumMasks],\n  );\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useCarbonController } from '../hooks/carbonController';\n\nexport const carbonContext = createContext();\n\nexport const useCarbon = () => {\n  const state = useContext(carbonContext);\n\n  if (state === undefined) {\n    throw new Error('useCarbon must be used within a CarbonProvider');\n  }\n\n  return state;\n};\n\nconst CarbonProvider = ({ children }) => {\n  const context = useCarbonController();\n\n  return <carbonContext.Provider value={context}>{children}</carbonContext.Provider>;\n};\n\nexport default CarbonProvider;\n","import { useState, useCallback, useRef, useEffect } from 'react';\nimport { useAudio } from '../context/audio';\n\nexport const useCarbonController = () => {\n  const {\n    handlers: {\n      speech: { say },\n    },\n  } = useAudio();\n\n  const carbonRef = useRef();\n  const [carbonState, setCarbonState] = useState(false);\n\n  useEffect(() => {\n    if (carbonState && !carbonRef.current) {\n      carbonRef.current = true;\n    } else if (!carbonState && carbonRef.current) {\n      carbonRef.current = false;\n    }\n  }, [carbonState]);\n\n  const toggle = useCallback(() => {\n    setCarbonState((state) => {\n      if (!state) {\n        say('Carbon Activated!');\n      }\n      return !state;\n    });\n  }, [say]);\n\n  window.__carbonate__ = toggle;\n\n  return { carbonState, carbonRef };\n};\n","import { useMemo, useRef, useCallback, useState } from 'react';\n\nimport { useZip } from '../zip';\nimport { useAudio } from '../../context/audio';\nimport { useIterateMask } from '../iterateMask';\nimport { useWebcam } from '../../context/webcam';\nimport { rawScoreToTenBinScore } from '../../lib/score';\nimport { getScoreAndOverlayForSegmentationAndImageData, getScore } from '../../lib/util';\nimport { useCarbon } from '../../context/carbon';\nimport { useMultiplayerScores } from '../../components/Main';\n\nexport const useSimpleGame = ({ setLapTimeInfo } = {}) => {\n  const promRef = useRef();\n  const webcam = useWebcam();\n  const { carbonRef } = useCarbon();\n  const roundTracker = useRef(0);\n  const maskIterator = useIterateMask();\n  const lastTimeAttackSuccess = useRef(0);\n  const [scores, setScores] = useState([]);\n  const zip = useZip(maskIterator.setMasks);\n  const [multiplayerScores, setMultiplayerScores] = useMultiplayerScores();\n\n  const {\n    handlers: {\n      sfx: { playSuccessSound, playFailureSound },\n      speech: { say },\n    },\n  } = useAudio();\n\n  const clearScores = useCallback(() => {\n    setScores([]);\n    setMultiplayerScores([[], []]);\n  }, [setMultiplayerScores]);\n\n  const handleBasicLoop = useCallback(\n    (playerIndex, sendResults = () => {}) => async (controller) => {\n      if (controller.time.first) {\n        maskIterator.next(); // load the first mask\n        if (!playerIndex) clearScores();\n        controller.useTimer({\n          maxLaps: maskIterator.getNumMasks(),\n          setLapTimeInfo: setLapTimeInfo,\n          announceSeconds: true,\n          onLap: ({ predict, time, stop }) => {\n            const target = maskIterator.maskRef.current;\n\n            // we actually shouldn't reach this,\n            // because the maxLaps should trigger a stop first\n            if (!target) return stop();\n\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const { score, targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                target,\n                segmentation,\n                webcam.flipX,\n              );\n\n              const dataUri = webcam.imageDataToDataUri(targetOverlay);\n\n              if (playerIndex !== undefined) {\n                const scorePacket = { score: rawScoreToTenBinScore(score), dataUri };\n\n                sendResults(scorePacket);\n                setMultiplayerScores((state) => {\n                  const newState = [...state];\n                  newState[playerIndex] = [\n                    ...newState[playerIndex],\n                    scorePacket,\n                  ];\n\n                  return newState;\n                });\n              } else {\n                setScores((state) => [...state, { score: rawScoreToTenBinScore(score), dataUri }]);\n              }\n\n              webcam.clearCanvas();\n              maskIterator.next();\n            });\n          },\n        });\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [maskIterator, clearScores, setLapTimeInfo, webcam, setMultiplayerScores],\n  );\n\n  const handleLoop = useCallback(() => handleBasicLoop(), [handleBasicLoop]);\n\n  const handleMultiplayerLoop = useCallback((playerIndex, sendResults) => handleBasicLoop(playerIndex, sendResults), [\n    handleBasicLoop,\n  ]);\n\n  const handleSurvivalLoop = useCallback(\n    async (controller) => {\n      if (controller.time.first) {\n        maskIterator.random();\n        clearScores();\n        controller.useTimer({\n          maxLaps: 9999999, // Good luck surviving this long!\n          lapDuration: 10.0 * 1000, // Initial time\n          setLapTimeInfo: setLapTimeInfo,\n          announceSeconds: true,\n          onLap: ({ predict, time, stop }) => {\n            const target = maskIterator.maskRef.current;\n\n            // we actually shouldn't reach this,\n            // because the maxLaps should trigger a stop first\n            if (!target) return stop();\n\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const { score, targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                target,\n                segmentation,\n                webcam.flipX,\n              );\n\n              const scoreToProceed = 4;\n\n              // Play Sound ASAP\n              const tenBinScore = rawScoreToTenBinScore(score);\n              if (tenBinScore < scoreToProceed) {\n                if (carbonRef.current) {\n                  say('Missed it!');\n                } else {\n                  playFailureSound();\n                }\n              } else {\n                if (carbonRef.current) {\n                  say('Got it!');\n                } else {\n                  playSuccessSound();\n                }\n              }\n\n              const dataUri = webcam.imageDataToDataUri(targetOverlay);\n\n              setScores((state) => [...state, { score: rawScoreToTenBinScore(score), dataUri }]);\n\n              webcam.clearCanvas();\n              if (tenBinScore < scoreToProceed) {\n                // Game Over\n                maskIterator.reset();\n                return stop();\n              } else {\n                // Adjust time - multiply (decay) by 0.9.\n                // controller.timerRef.current.lapDuration =\n                //   Math.floor(Math.max(controller.timerRef.current.lapDuration * 0.9, 1) * 10) / 10;\n\n                // Adjust time linear - subtract a fixed value.\n                // controller.timerRef.current.lapDuration =\n                //   Math.floor(Math.max(controller.timerRef.current.lapDuration - 500, 1000) * 10) /\n                //   10;\n\n                // Adjust time, t + 1 = t - log(t) - small_constant\n                // Intervals are: [10, 9.3, 8.6, 7.9, 7.4, 6.7, 6.1, 5.6, 5.0, 4.5, 4.0, 3.6, 3.2, 2.7, 2.4, 2.0, 1.8, 1.5, 1.3, 1.1, 1.0 ...... 0.67]\n                const t_sec = controller.timerRef.current.lapDuration / 1000;\n                controller.timerRef.current.lapDuration =\n                  (t_sec - Math.log(t_sec) / Math.log(50)) * 1000 - 100;\n\n                maskIterator.random();\n              }\n            });\n          },\n        });\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [\n      webcam,\n      maskIterator,\n      setLapTimeInfo,\n      clearScores,\n      carbonRef,\n      playFailureSound,\n      playSuccessSound,\n      say,\n    ],\n  );\n\n  const handleTimeAttackLoop = useCallback(\n    async (controller) => {\n      if (controller.time.first) {\n        const numMasksPerGame = 10; // Use only this many masks in a game.\n        maskIterator.resetAndShuffle();\n        maskIterator.next(true);\n        clearScores();\n        roundTracker.current = 0;\n        lastTimeAttackSuccess.current = 0;\n        controller.useTimer({\n          setLapTimeInfo: setLapTimeInfo,\n          announceSeconds: false,\n          lapDuration: 250,\n          postLapDelay: 0,\n          onLap: ({ predict, time, stop }) => {\n            const currentMaskIdx = maskIterator.maskIdxRef.current;\n            const target = maskIterator.maskRef.current;\n\n            // we will reach this\n            if (!target || roundTracker.current >= numMasksPerGame) {\n              return stop();\n            }\n\n            // if we hit this then we succeeded in the predict promise\n            // but fired a new lap before it succeeded\n            if (roundTracker.current >= currentMaskIdx || roundTracker.current >= numMasksPerGame)\n              return;\n\n            const maxTimeAllowed = 10.0;\n            const segmentationMs = time.elapsed - lastTimeAttackSuccess.current;\n            if (segmentationMs / 1000 >= maxTimeAllowed) {\n              lastTimeAttackSuccess.current = time.elapsed;\n              if (carbonRef.current) {\n                say('Missed it!');\n              } else {\n                playFailureSound();\n              }\n              const dataUri = webcam.imageDataToDataUri(target);\n              setScores((state) => [...state, { score: maxTimeAllowed, dataUri }]);\n              webcam.clearCanvas();\n              roundTracker.current++;\n              if (roundTracker.current < numMasksPerGame) {\n                maskIterator.next(true);\n              }\n            }\n\n            promRef.current = predict(webcam.videoRef.current)\n              .then(async (segmentation) => {\n                const score = getScore(target, segmentation, webcam.flipX);\n\n                const tenBinScore = rawScoreToTenBinScore(score);\n                if (tenBinScore > 5) {\n                  // if we hit this then we succeeded in the predict promise\n                  // but fired a new lap before it succeeded\n                  if (\n                    roundTracker.current >= currentMaskIdx ||\n                    roundTracker.current >= numMasksPerGame\n                  ) {\n                    return;\n                  }\n\n                  if (carbonRef.current) {\n                    say('Got it!');\n                  } else {\n                    playSuccessSound();\n                  }\n\n                  const segmentationSec = segmentationMs / 1000;\n                  lastTimeAttackSuccess.current = time.elapsed;\n                  const numSecs = Number(segmentationSec.toFixed(1));\n\n                  const { targetOverlay } = getScoreAndOverlayForSegmentationAndImageData(\n                    target,\n                    segmentation,\n                    webcam.flipX,\n                  );\n                  const dataUri = webcam.imageDataToDataUri(targetOverlay);\n                  setScores((state) => [...state, { score: numSecs, dataUri }]);\n                  webcam.clearCanvas();\n                  roundTracker.current++;\n                  if (roundTracker.current < numMasksPerGame) {\n                    maskIterator.next(true);\n                  }\n                }\n              })\n              .catch(console.error);\n          },\n        });\n      }\n\n      if (maskIterator.maskRef.current) {\n        webcam.ctx.putImageData(maskIterator.maskRef.current, 0, 0);\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) promRef.current.then(controller.webcam.clearCanvas);\n        else controller.webcam.clearCanvas();\n      };\n    },\n    [\n      webcam,\n      maskIterator,\n      clearScores,\n      setLapTimeInfo,\n      playFailureSound,\n      playSuccessSound,\n      carbonRef,\n      say,\n    ],\n  );\n\n  return useMemo(\n    () => ({\n      zip,\n      scores,\n      multiplayerScores,\n      handleLoop,\n      handleMultiplayerLoop,\n      handleSurvivalLoop,\n      handleTimeAttackLoop,\n      clearScores,\n      reset: maskIterator.reset,\n      ready: maskIterator.hasMasks,\n      setMasks: maskIterator.setMasks,\n    }),\n    [\n      zip,\n      scores,\n      multiplayerScores,\n      handleLoop,\n      handleMultiplayerLoop,\n      handleSurvivalLoop,\n      handleTimeAttackLoop,\n      clearScores,\n      maskIterator.hasMasks,\n      maskIterator.reset,\n      maskIterator.setMasks,\n    ],\n  );\n};\n","import JSZip from 'jszip';\nimport imageDataUri from 'image-data-uri';\nimport { useRef, useCallback, useState } from 'react';\nimport { useAudio } from '../../context/audio';\n\nimport { saveAs, getSegmentationeOverlayAndBinaryImageData } from '../../lib/util';\nimport { useMemo } from 'react';\nimport { useCarbon } from '../../context/carbon';\n\nexport const useCaptureMasks = ({ maxMasks = 0, setLapTimeInfo } = {}) => {\n  const promRef = useRef();\n  const masksRef = useRef([]);\n  const maskCountRef = useRef();\n  const [masks, _setMasks] = useState([]);\n  const { carbonRef } = useCarbon();\n  const {\n    handlers: {\n      sfx: { playCameraSound },\n      speech: { say },\n    },\n  } = useAudio();\n\n  const setMasks = useCallback((arg) => {\n    if (typeof arg === 'function') {\n      _setMasks((state) => {\n        const newState = arg(state);\n        if (newState !== state) {\n          masksRef.current = newState;\n        }\n\n        return newState;\n      });\n    } else {\n      masksRef.current = arg;\n      _setMasks(arg);\n    }\n  }, []);\n\n  const getMasks = useCallback(() => masksRef.current, []);\n\n  const removeMask = useCallback(\n    ({ currentTarget: { name: idx } }) => {\n      // the plus coerces the idx to a number\n      setMasks((state) => state.filter((_, index) => index !== +idx));\n    },\n    [setMasks],\n  );\n\n  const removeAllMasks = useCallback(() => {\n    setMasks([]);\n  }, [setMasks]);\n\n  const downloadMasks = useCallback(() => {\n    const zip = new JSZip();\n    const img = zip.folder('masks');\n    masks.forEach(({ overlay: mask }, idx) => {\n      img.file(`mask-${idx}.png`, imageDataUri.decode(mask).dataBase64, { base64: true });\n    });\n\n    zip.generateAsync({ type: 'blob' }).then((zipFile) => saveAs(zipFile, 'masks.zip'));\n  }, [masks]);\n\n  const handleLoop = useCallback(\n    (onLoopEnd) => async (controller) => {\n      if (controller.time.first) {\n        maskCountRef.current = masks.length;\n        controller.useTimer({\n          announceSeconds: true,\n          lapDuration: 3000, // NOTE: This is the per-loop time used for multiplayer capture.\n          postLapDelay: 2500,\n          maxLaps: maxMasks,\n          setLapTimeInfo: setLapTimeInfo,\n          // run a single prediction before starting the lap to ensure things roll smoothly\n          onBeforeStartLap: async ({ predict, webcam, time, stop }) => {\n            return predict();\n          },\n          onLap: ({ predict, webcam, time, stop }) => {\n            promRef.current = predict(webcam.videoRef.current).then(async (segmentation) => {\n              const {\n                overlayImageData,\n                binaryImageData,\n              } = getSegmentationeOverlayAndBinaryImageData(segmentation, webcam.flipX);\n              // Play Sound\n              if (carbonRef.current) {\n                say('Gotcha!');\n              } else {\n                playCameraSound();\n              }\n              const overlayDataUri = webcam.imageDataToDataUri(overlayImageData);\n              const binaryDataUri = webcam.imageDataToDataUri(binaryImageData);\n\n              webcam.clearCanvas();\n              webcam.ctx.putImageData(overlayImageData, 0, 0);\n\n              setMasks((state) => [...state, { overlay: overlayDataUri, binary: binaryDataUri }]);\n\n              await new Promise((resolve) => setTimeout(resolve, 1500));\n              webcam.clearCanvas();\n\n              if (maxMasks && ++maskCountRef.current > maxMasks) {\n                // NOTE: This does not get called if maxLaps is set.\n                return stop();\n              }\n            });\n          },\n          onEnd: async ({ time, webcam, predict, stop }) => {\n            // This is the pause after the last capture to show the mask before clearing.\n            await new Promise((resolve) => setTimeout(resolve, 2000));\n            webcam.clearCanvas();\n          },\n        });\n      }\n\n      // return a cleanup function to clear the canvas\n      // use a promise ref since we are capturing asynchronously\n      // if first promise not initialized, clear canvas right away\n      return () => {\n        if (promRef.current) {\n          promRef.current.then(controller.webcam.clearCanvas).then(() => {\n            if (onLoopEnd) {\n              onLoopEnd();\n            }\n          });\n        } else {\n          controller.webcam.clearCanvas();\n          if (onLoopEnd) {\n            onLoopEnd();\n          }\n        }\n      };\n    },\n    [masks.length, maxMasks, setLapTimeInfo, setMasks, playCameraSound, say, carbonRef],\n  );\n\n  return useMemo(\n    () => ({\n      masks,\n      getMasks,\n      handleLoop,\n      removeMask,\n      downloadMasks,\n      removeAllMasks,\n    }),\n    [masks, getMasks, handleLoop, removeMask, downloadMasks, removeAllMasks],\n  );\n};\n","import { useCallback, useRef, useMemo } from 'react';\nimport { useAudio } from '../context/audio';\nimport { scoreToColor } from '../lib/score';\n\nexport const initialLapInfo = {\n  percent: 0.0,\n  percentRemaining: 100.0,\n  color: scoreToColor(100),\n  secondsRemaining: 0,\n};\n\nexport const useLapTimer = () => {\n  const lapTimer = useRef();\n  const {\n    handlers: { speech },\n  } = useAudio();\n\n  const useTimer = useCallback(\n    ({\n      onBeforeStartLap,\n      onLap,\n      onEnd,\n      maxLaps,\n      setLapTimeInfo,\n      lapDuration = 3000,\n      postLapDelay = 1000,\n      announceSeconds = true,\n    } = {}) => {\n      if (onLap && !lapTimer.current) {\n        lapTimer.current = {\n          onBeforeStartLap,\n          onBeforeComplete: false,\n          onBeforeStarted: false,\n          onEndCalled: false,\n          onLap,\n          onEnd,\n          maxLaps,\n          numLaps: 0,\n          lapDuration,\n          postLapDelay,\n          setLapTimeInfo,\n          announceSeconds,\n        };\n        if (setLapTimeInfo) {\n          lapTimer.current.setLapTimeInfo(initialLapInfo);\n        }\n      }\n    },\n    [],\n  );\n\n  const handleLap = useCallback(\n    async ({ time, webcam, predict, stop }) => {\n      // handleLoop called useTimer\n      if (lapTimer.current) {\n        // if they've provided an initialization function,\n        // run it and don't start the first lap until it resolves\n        if (lapTimer.current.onBeforeStartLap && !lapTimer.current.onBeforeComplete) {\n          if (lapTimer.current.onBeforeStarted) return;\n          else {\n            lapTimer.current.onBeforeStarted = true;\n\n            await lapTimer.current.onBeforeStartLap({ time, webcam, predict, stop });\n            lapTimer.current.onBeforeComplete = true;\n            time.resetLapTime();\n            return;\n          }\n        }\n\n        if (lapTimer.current.maxLaps && lapTimer.current.numLaps === lapTimer.current.maxLaps) {\n          if (lapTimer.current.onEnd) {\n            if (!lapTimer.current.onEndCalled) {\n              lapTimer.current.onEndCalled = true;\n              await lapTimer.current.onEnd({ time, webcam, predict, stop });\n              lapTimer.current = null;\n              return stop();\n            }\n            return;\n          } else {\n            lapTimer.current = null;\n            return stop();\n          }\n        }\n\n        const secondsPassed = Math.floor(time.lapTime / 100) / 10;\n\n        // we get a single instance of -1 so set min to 0\n        const countdown = +Math.max(lapTimer.current.lapDuration / 1000 - secondsPassed, 0).toFixed(\n          1,\n        );\n\n        if (lapTimer.current.setLapTimeInfo) {\n          const percentRemaining = Math.min(\n            (Number(countdown) / lapTimer.current.lapDuration) * 100000,\n            100,\n          );\n          const percent = 100 - percentRemaining;\n          const color = scoreToColor(percentRemaining);\n          const secondsRemaining = countdown.toFixed(1);\n          const lapInfo = {\n            percent,\n            percentRemaining,\n            color,\n            secondsRemaining,\n          };\n          lapTimer.current.setLapTimeInfo(lapInfo);\n        }\n\n        // announce the current countdown time (if not announced yet and requested)\n        if (\n          countdown &&\n          lapTimer.current.announceSeconds &&\n          lapTimer.current.lastSpeech !== countdown &&\n          parseInt(countdown, 10) === Number(countdown) // only speak ints\n        ) {\n          lapTimer.current.lastSpeech = countdown;\n          speech.say(`${countdown}`);\n        }\n\n        // Once we've reached the end of the lap\n        // fire the provided onLap handler and set handlerCalled so we don't call it again until next lap\n        if (time.lapTime >= lapTimer.current.lapDuration && !lapTimer.current.handlerCalled) {\n          lapTimer.current.numLaps++;\n          lapTimer.current.handlerCalled = true;\n          lapTimer.current.handlerResolved = false;\n          await lapTimer.current.onLap({\n            time,\n            webcam,\n            predict,\n            stop,\n            lapNum: lapTimer.current.numLaps,\n          });\n          lapTimer.current.handlerResolved = true;\n        } else if (\n          time.lapTime >= lapTimer.current.lapDuration + lapTimer.current.postLapDelay &&\n          lapTimer.current.handlerResolved\n        ) {\n          // we've already called the lap handler\n          // and the handler has resolved\n          // and delayed an additional amount of time\n          // so we reset the lapTime and mark the handler as ready to be called again\n          time.resetLapTime();\n          lapTimer.current.handlerCalled = false;\n          lapTimer.current.handlerResolved = false;\n        }\n      }\n    },\n    [speech],\n  );\n\n  const clear = useCallback(() => {\n    lapTimer.current = null;\n  }, []);\n\n  return useMemo(\n    () => ({\n      clear,\n      useTimer,\n      handleLap,\n      timerRef: lapTimer,\n    }),\n    [clear, useTimer, handleLap, lapTimer],\n  );\n};\n","import { useState } from 'react';\nimport { useRef, useEffect, useMemo, useCallback } from 'react';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\nimport { initialLapInfo } from '../lapTimer';\n\nexport const useSurvival = (loop) => {\n  const [lapTimeInfo, setLapTimeInfo] = useState(initialLapInfo);\n  const simpleGame = useSimpleGame({ setLapTimeInfo });\n  const captureMasks = useCaptureMasks({ setLapTimeInfo });\n\n  const resultsText = useMemo(\n    () =>\n      `You survived ${simpleGame?.scores?.length - 1} round${\n        simpleGame?.scores?.length !== 2 ? 's' : ''\n      }.`,\n    [simpleGame.scores],\n  );\n\n  const loadedRef = useRef(false);\n  useEffect(() => {\n    if (!loadedRef.current) {\n      loadedRef.current = true;\n      // simpleGame.zip.handleLoadPreparedMasks('survival_2 copy.zip'); // TODO: Make a BETTER Survival Set.\n      simpleGame.zip.handleLoadPreparedMasks('custom_mask.zip'); // TODO: Make a BETTER Survival Set.\n    }\n  }, [simpleGame]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      loop.start(simpleGame.handleSurvivalLoop);\n    }\n  }, [loop, simpleGame]);\n\n  const handleClickCaptureMasks = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      loop.start(captureMasks.handleLoop());\n    }\n  }, [loop, captureMasks]);\n\n  const survival = useMemo(\n    () => ({\n      name: 'survival',\n      loop,\n      simpleGame,\n      lapTimeInfo,\n      resultsText,\n      captureMasks,\n      handleClickGame,\n      handleClickCaptureMasks,\n    }),\n    [\n      loop,\n      simpleGame,\n      lapTimeInfo,\n      resultsText,\n      captureMasks,\n      handleClickGame,\n      handleClickCaptureMasks,\n    ],\n  );\n\n  return survival;\n};\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { CircularProgress, makeStyles } from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport PlayIcon from '@material-ui/icons/PlayCircleOutline';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { getFonts } from '../App/App';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'relative',\n    padding: theme.spacing(1),\n    paddingRight: theme.spacing(5),\n    paddingLeft: theme.spacing(5),\n    background: 'rgba(255,255,255,0.95)',\n    paddingBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    textAlign: 'center',\n    '& h2': {\n      marginBottom: theme.spacing(4),\n    },\n    '& h3': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  help: {\n    maxHeight: 200,\n    marginTop: theme.spacing(2),\n    '& > div > p': {\n      marginBottom: theme.spacing(1),\n    },\n  },\n  helpBtn: {\n    position: 'absolute',\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    color: theme.palette.secondary.main,\n    background: theme.palette.primary.main,\n    transition: '300ms all',\n    '&:hover': {\n      color: theme.palette.primary.main,\n      background: theme.palette.secondary.main,\n    },\n  },\n  icon: {\n    fontSize: 50,\n  },\n  marginTop: {\n    marginTop: theme.spacing(2),\n  },\n  helpContent: {\n    fontWeight: 600,\n    fontFamily: getFonts('Rajdhani'),\n    fontSize: 18,\n  },\n}));\n\nconst GameInfoBox = ({\n  headerContent,\n  middleContent,\n  footerContent,\n  primaryText,\n  secondaryText,\n  helpContent,\n  iconProps: { loading: isLoading, ...iconProps } = {},\n  Icon,\n}) => {\n  const [showHelp, setShowHelp] = useState(false);\n  const toggleHelp = useCallback(() => {\n    setShowHelp((a) => !a);\n  }, []);\n\n  const classes = useStyles();\n\n  const IconComponent = useMemo(\n    () => (isLoading ? CircularProgress : { play: PlayIcon, replay: ReplayIcon }[Icon] || Icon),\n    [Icon, isLoading],\n  );\n\n  return (\n    <Paper className={classes.paper}>\n      {headerContent}\n      {primaryText && (\n        <Typography component=\"h3\" variant=\"h5\">\n          {primaryText}\n        </Typography>\n      )}\n      {middleContent}\n      {secondaryText && (\n        <Typography\n          component=\"h4\"\n          variant=\"h6\"\n          className={classNames(classes.subtext, {\n            [classes.marginTop]: middleContent,\n          })}\n        >\n          {secondaryText}\n        </Typography>\n      )}\n      {IconComponent && (\n        <IconButton size=\"medium\" disabled={isLoading} {...iconProps}>\n          <IconComponent className={classes.icon} color={iconProps.color || 'secondary'} />\n        </IconButton>\n      )}\n      {footerContent}\n      {helpContent && (\n        <div className={classes.help}>\n          {showHelp && (\n            <div className={classes.helpContent}>\n              {Array.isArray(helpContent) ? (\n                <>\n                  {helpContent.map((text) => (\n                    <p key={text}>{text}</p>\n                  ))}\n                </>\n              ) : (\n                helpContent\n              )}\n            </div>\n          )}\n          <IconButton size=\"small\" className={classes.helpBtn} onClick={toggleHelp}>\n            <HelpIcon />\n          </IconButton>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nGameInfoBox.propTypes = {\n  headerContent: PropTypes.node,\n  primaryText: PropTypes.string,\n  secondaryText: PropTypes.node,\n  children: PropTypes.node,\n  helpContent: PropTypes.node,\n  footerContent: PropTypes.node,\n  iconProps: PropTypes.object,\n  Icon: PropTypes.node,\n};\n\nexport default GameInfoBox;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core';\n\nimport ProgressBar from '../../ProgressBar';\nimport SurvivalFooter from './SurvivalFooter';\nimport { useGameMode } from '../../Game';\nimport { useSurvival } from '../../../hooks/screenHooks/survival';\nimport { useWebcam } from '../../../context/webcam';\nimport GameInfoBox from '../../GameInfoBox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  options: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nexport const getSurvivalPaperProps = (_, ind, masks) =>\n  ind === masks.length - 1\n    ? {\n        style: { background: 'rgba(255, 0, 0, 0.4)' },\n      }\n    : {};\n\nconst Survival = (props) => {\n  const classes = useStyles();\n  const survival = useGameMode(useSurvival);\n  const webcam = useWebcam();\n  const { loop, lapTimeInfo, handleClickGame } = survival;\n\n  // TODO: add an animation for the screen content on page transition\n\n  return (\n    <div\n      className={classnames(classes.root, {\n        [classes.overlay]: !loop.looping,\n      })}\n    >\n      <div\n        className={classnames(classes.options, {\n          [classes.optionsTop]: !!loop.looping,\n        })}\n      >\n        {loop.looping ? (\n          <div className={classes.progress}>\n            <ProgressBar color={lapTimeInfo.color} completed={lapTimeInfo.percentRemaining} />\n          </div>\n        ) : (\n          <GameInfoBox\n            primaryText=\"Survival\"\n            secondaryText=\"Match the poses and survive as long as you can.\"\n            middleContent={webcam.isFullScreen && <SurvivalFooter />}\n            Icon=\"play\"\n            iconProps={{\n              onClick: handleClickGame,\n              loading: !loop.ready,\n              color: 'secondary',\n            }}\n            helpContent={[\n              'You will have a limited number of time to match each pose.',\n              'Successfully match a pose by being within its lines when the timer runs out.',\n              'If your score is high enough, you will move on to the next round.',\n              'You will have less time each round.',\n              'How long can you survive?',\n            ]}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Survival;\n","import React from 'react';\n\nimport ScoreResults from '../../ScoreResults';\nimport { useGame } from '../../Game';\nimport { getSurvivalPaperProps } from './Survival';\n\nconst SurvivalFooter = (props) => {\n  const game = useGame();\n  if (!game.mode) return null;\n\n  const { simpleGame, resultsText } = game.mode;\n\n  return (\n    !game.loop.looping && (\n      <ScoreResults\n        label={resultsText}\n        getImageChild={null}\n        results={simpleGame.scores}\n        handleClose={simpleGame.clearScores}\n        getPaperProps={getSurvivalPaperProps}\n      />\n    )\n  );\n};\n\nexport default SurvivalFooter;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport ScoreResults from '../../ScoreResults';\nimport { useGame } from '../../Game';\n\nconst useStyles = makeStyles((theme) => ({\n  root: ({ isFullScreen }) => ({\n    minWidth: isFullScreen ? '50%' : 'auto',\n    '& > div:first-of-type': {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n  }),\n}));\n\nconst MultiplayerFooter = (props) => {\n  const game = useGame();\n  const classes = useStyles(props);\n\n  if (!game.mode) return null;\n  const { simpleGame, multiplayerResultsText } = game.mode;\n\n  return (\n    !game.loop.looping && (\n      <div className={classes.root}>\n        <ScoreResults label={multiplayerResultsText[0]} results={simpleGame.multiplayerScores[0]} />\n        <ScoreResults label={multiplayerResultsText[1]} results={simpleGame.multiplayerScores[1]} />\n      </div>\n    )\n  );\n};\n\nexport default MultiplayerFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport { maxWidth } from '../../lib/constants';\nimport { makeStyles } from '@material-ui/styles';\nimport BasicFooter from './SinglePlayer/BasicFooter';\nimport SurvivalFooter from './SinglePlayer/SurvivalFooter';\nimport MultiplayerFooter from './MultiPlayer/MultiplayerFooter';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: '0 auto',\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    '& > div': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Footers = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: BasicFooter,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: SurvivalFooter,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: BasicFooter,\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: MultiplayerFooter,\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: MultiplayerFooter,\n    },\n  },\n};\n\nconst ScreenFooter = (props) => {\n  const classes = useStyles();\n\n  const { screen, players, mode } = props.screen.state;\n\n  const Footer = Footers[screen]?.[players]?.[mode] || Null;\n\n  return (\n    <div className={classes.root}>\n      <Footer />\n    </div>\n  );\n};\n\nScreenFooter.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenFooter;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { IconButton, makeStyles, Typography } from '@material-ui/core';\nimport { animated, useTrail, config } from 'react-spring';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(1),\n    '& > div > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  buttons: {\n    display: 'flex',\n  },\n  h: {\n    flexDirection: 'row',\n  },\n  v: {\n    flexDirection: 'column',\n  },\n  minWidth: {\n    minWidth: 150,\n  },\n  label: {\n    color: theme.palette.primary.main,\n    fontWeight: 'bold',\n    background: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    border: `${theme.spacing(0.4)}px solid ${theme.palette.primary.main}`,\n  },\n  icon: {\n    fontSize: 100,\n    border: `${theme.spacing(0.4)}px solid ${theme.palette.secondary.main}`,\n    borderRadius: '50%',\n    padding: theme.spacing(1),\n    background: theme.palette.primary.main,\n    color: 'black',\n    transition: '300ms all',\n    '&:hover': {\n      border: `${theme.spacing(0.4)}px solid ${theme.palette.primary.main}`,\n      background: theme.palette.secondary.main,\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst getConfig = (offset) => ({\n  transform: 'translate3d(0,0px,0)',\n  from: { transform: `translate3d(0,-${offset}px,0)` },\n  config: config.wobbly,\n});\n\nconst Options = (props) => {\n  const classes = useStyles();\n  const trail = useTrail(props.buttons.length, getConfig(props.offset || 100));\n  const labelTrail = useTrail(1, getConfig((props.offset || 100) + 200));\n\n  const [label, setLabel] = useState(props.label);\n\n  return (\n    <div className={classes.root}>\n      {props.label &&\n        labelTrail.map((styleProps, idx) => (\n          <animated.div style={styleProps} key={idx}>\n            <Typography component=\"h2\" variant=\"h5\" className={classes.label}>\n              {label}\n            </Typography>\n          </animated.div>\n        ))}\n      <div\n        className={classnames(classes.buttons, {\n          [classes.h]: props.layout === 'h',\n          [classes.v]: props.layout !== 'h',\n        })}\n      >\n        {trail.map((styleProps, idx) => {\n          const {\n            Component,\n            visible = true,\n            props: { Icon, hover, ...componentProps } = {},\n          } = props.buttons[idx];\n\n          const mouseEffects = {};\n\n          if (hover && componentProps.name && props.label) {\n            mouseEffects.onMouseEnter = () => {\n              setLabel(componentProps.name);\n            };\n\n            mouseEffects.onMouseLeave = () => {\n              setLabel(props.label);\n            };\n          }\n\n          return visible ? (\n            <animated.div key={componentProps.key} style={styleProps}>\n              {Component ? (\n                <Component {...componentProps} />\n              ) : Icon ? (\n                <IconButton\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.iconButton}\n                  {...mouseEffects}\n                  {...componentProps}\n                >\n                  <Icon className={classes.icon} />\n                </IconButton>\n              ) : (\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  {...componentProps}\n                  className={classes.minWidth}\n                />\n              )}\n            </animated.div>\n          ) : null;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\nimport { useCarbon } from '../context/carbon';\nimport {\n  MULTIPLAYER,\n  SINGLE_PLAYER,\n  screenStates,\n  screenStatesArrays,\n} from '../lib/screenConstants';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport WeightIcon from '@material-ui/icons/FitnessCenter';\nimport BeachIcon from '@material-ui/icons/BeachAccess';\nimport HouseIcon from '@material-ui/icons/House';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport Options from './Options';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    '& button': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  gameMode: {\n    textAlign: 'center',\n  },\n  header: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Icons = {\n  [screenStates.mode[SINGLE_PLAYER].SURVIVAL]: WeightIcon,\n  [screenStates.mode[SINGLE_PLAYER].PRACTICE]: BeachIcon,\n  [screenStates.mode[SINGLE_PLAYER].TIME_ATTACK]: TimerIcon,\n  [screenStates.mode[MULTIPLAYER].LOCAL]: HouseIcon,\n  [screenStates.mode[MULTIPLAYER].REMOTE]: LanguageIcon,\n};\n\nconst SelectGameMode = (props) => {\n  const classes = useStyles();\n  const { carbonState } = useCarbon();\n\n  const handleSetGameMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.screen.handlers.setGameMode(name);\n    },\n    [props.screen.handlers],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.mode[props.screen.state.players]\n        ?.map((gameMode) => ({\n          props: {\n            key: gameMode,\n            name: gameMode,\n            children: gameMode,\n            onClick: handleSetGameMode,\n            Icon: Icons[gameMode],\n            hover: true,\n          },\n        }))\n        .filter((obj) => (!carbonState ? obj.props.name !== 'Practice' : true)), // Only show Practice in Carbonate mode.\n    [props.screen.state.players, handleSetGameMode, carbonState],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.gameMode}>\n        <Options buttons={buttons} label=\"Choose Mode\" layout=\"h\" />\n      </div>\n    </div>\n  );\n};\n\nSelectGameMode.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default SelectGameMode;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  fileInput: {\n    display: 'none',\n  },\n}));\n\nconst FileUpload = ({ onChange, multiple, children, filter, ...buttonProps }) => {\n  const classes = useStyles();\n\n  const fileRef = useRef();\n\n  const handleFileUpload = useCallback(\n    (fileObject) => {\n      if (!fileObject) return;\n\n      const disallowMultiple = multiple === false;\n      const allFiles = fileObject.target ? Array.from(fileObject.target.files) : fileObject.files;\n      let filteredFiles = filter ? allFiles.filter(filter) : allFiles;\n\n      if (disallowMultiple && filteredFiles.length > 1) {\n        filteredFiles = filteredFiles.slice(0, 1);\n      }\n\n      onChange(filteredFiles);\n    },\n    [onChange, multiple, filter],\n  );\n\n  const resetFile = useCallback(() => {\n    fileRef.current.value = null;\n  }, [fileRef]);\n\n  return (\n    <Button component=\"label\" {...buttonProps}>\n      {children}\n      <input\n        type=\"file\"\n        ref={fileRef}\n        className={classes.fileInput}\n        onClick={resetFile}\n        onChange={handleFileUpload}\n        multiple={multiple !== false}\n      />\n    </Button>\n  );\n};\n\nFileUpload.propTypes = {\n  multiple: PropTypes.bool,\n  filterFiles: PropTypes.func,\n  buttonProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default FileUpload;\n","import PropTypes from 'prop-types';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useRef, useCallback, useEffect, useState } from 'react';\n\nimport { numShippedMasks } from '../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  item: (width) => ({\n    minWidth: width - theme.spacing(4),\n    textAlign: 'center',\n  }),\n}));\n\nconst GameSelect = (props) => {\n  const [width, setWidth] = useState(0);\n  const classes = useStyles(width);\n\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.clientWidth);\n    }\n  }, []);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleClick = useCallback(\n    (name) => () => {\n      props.handleClick(name);\n      handleClose();\n    },\n    [props, handleClose],\n  );\n\n  return (\n    <>\n      <div ref={ref}>\n        <Button\n          fullWidth={true}\n          variant=\"contained\"\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n          aria-controls=\"mask-menu\"\n          disabled={props.disabled}\n        >\n          Select Masks\n        </Button>\n      </div>\n      <Menu\n        id=\"mask-menu\"\n        keepMounted={true}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        onClose={handleClose}\n        open={Boolean(anchorEl)}\n        container={props.containerRef.current || null}\n      >\n        {Array.from({ length: numShippedMasks }).map((_, idx) => (\n          <MenuItem key={idx} button={true} onClick={handleClick(`set${idx + 1}.zip`)}>\n            <span className={classes.item}>Game {idx + 1}</span>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nGameSelect.propTypes = {\n  value: PropTypes.string,\n  containerRef: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default GameSelect;\n","import { useMemo, useCallback, useState, useEffect } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\nimport { initialLapInfo } from '../lapTimer';\n\nexport const usePractice = (loop) => {\n  const webcam = useWebcam();\n  const [lapTimeInfo, setLapTimeInfo] = useState(initialLapInfo);\n  const simpleGame = useSimpleGame({ setLapTimeInfo });\n  const captureMasks = useCaptureMasks({ setLapTimeInfo });\n  const [loopType, setLoopType] = useState(null);\n\n  useEffect(() => {\n    if (!loop.looping && loopType) {\n      setLoopType(null);\n    }\n  }, [loop.looping, loopType]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(simpleGame.handleLoop);\n      setLoopType('play');\n    }\n  }, [loop, simpleGame]);\n\n  const handleStartRandomGame = useCallback(async () => {\n    if (loop.looping) return;\n\n    await simpleGame.zip.handleLoadRandomMaskSet();\n    handleClickGame();\n  }, [handleClickGame, loop.looping, simpleGame.zip]);\n\n  const handleClickCaptureMasks = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(captureMasks.handleLoop());\n      setLoopType('capture');\n    }\n  }, [loop, captureMasks, simpleGame]);\n\n  const handlePlayCapturedMasks = useCallback(async () => {\n    if (loop.looping) return;\n\n    const masks = await Promise.all(\n      captureMasks.masks.map(({ overlay }) => webcam.dataUriToImageData(overlay)),\n    );\n    simpleGame.setMasks(masks);\n    handleClickGame();\n  }, [captureMasks.masks, simpleGame, webcam, handleClickGame, loop.looping]);\n\n  const practice = useMemo(\n    () => ({\n      name: 'practice',\n      loopType,\n      simpleGame,\n      lapTimeInfo,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    }),\n    [\n      loopType,\n      simpleGame,\n      lapTimeInfo,\n      captureMasks,\n      handleClickGame,\n      handleStartRandomGame,\n      handlePlayCapturedMasks,\n      handleClickCaptureMasks,\n    ],\n  );\n\n  return practice;\n};\n","import classnames from 'classnames';\nimport React, { useRef, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nimport Options from '../../Options';\nimport BasicFooter from './BasicFooter';\nimport FileUpload from '../../FileUpload';\nimport GameSelect from '../../GameSelect';\nimport ProgressBar from '../../ProgressBar';\n\nimport { useGame, useGameMode } from '../../Game';\nimport { useWebcam } from '../../../context/webcam';\nimport { usePractice } from '../../../hooks/screenHooks/practice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  captures: {\n    width: '100%',\n    '& > div': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n}));\n\nconst Practice = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n  const webcam = useWebcam();\n  const containerRef = useRef();\n  const practice = useGameMode(usePractice);\n\n  const {\n    loopType,\n    lapTimeInfo,\n    simpleGame,\n    captureMasks,\n    handleClickGame,\n    handleStartRandomGame,\n    handleClickCaptureMasks,\n  } = practice;\n\n  const { loop } = game;\n\n  const timerColor = lapTimeInfo.color;\n\n  const buttons = useMemo(\n    () => [\n      {\n        props: {\n          key: 'play/stop',\n          onClick: handleClickGame,\n          disabled: !loop.ready || (!loop.looping && !simpleGame.ready),\n          children: loop.looping ? 'Stop' : 'Play',\n        },\n      },\n      {\n        props: {\n          key: 'playRandom',\n          color: 'secondary',\n          onClick: handleStartRandomGame,\n          disabled: !loop.ready || loop.looping,\n          children: 'Play Random',\n        },\n      },\n      {\n        props: {\n          containerRef,\n          key: 'chooseMasks',\n          disabled: !loop.ready || loop.looping,\n          handleClick: simpleGame.zip.handleLoadPreparedMasks,\n        },\n        Component: GameSelect,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'loadMasks',\n          variant: 'contained',\n          onChange: simpleGame.zip.handleZipInputChange,\n          disabled: !loop.ready || loop.looping || simpleGame.zip.loading,\n          children: simpleGame.loading ? 'Loading...' : 'Load Masks',\n        },\n        Component: FileUpload,\n        visible: !loop.looping,\n      },\n      {\n        props: {\n          key: 'captureMasks',\n          onClick: handleClickCaptureMasks,\n          disabled: !loop.ready || loop.looping,\n          children: 'Capture Masks',\n          color: 'default',\n        },\n        visible: !loop.looping,\n      },\n    ],\n    [\n      loop.ready,\n      loop.looping,\n      handleClickGame,\n      simpleGame.ready,\n      simpleGame.loading,\n      handleStartRandomGame,\n      simpleGame.zip.loading,\n      handleClickCaptureMasks,\n      simpleGame.zip.handleZipInputChange,\n      simpleGame.zip.handleLoadPreparedMasks,\n    ],\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !loop.looping,\n          [classes.rootTop]: !!loop.looping,\n          [classes.rootApart]:\n            !!(simpleGame.scores?.length || captureMasks.masks?.length) && webcam.isFullScreen,\n        })}\n      >\n        <div\n          className={classnames({\n            [classes.optionsTop]: !!loop.looping,\n          })}\n          ref={containerRef}\n        >\n          {loop.looping ? (\n            <Options\n              offset={70}\n              buttons={[\n                {\n                  props: {\n                    key: 'stop',\n                    onClick: handleClickGame,\n                    children: 'Stop',\n                  },\n                },\n              ]}\n            />\n          ) : (\n            <Options buttons={buttons} />\n          )}\n          {loop.looping && loopType === 'play' && (\n            <div className={classes.progress}>\n              <ProgressBar color={timerColor} completed={lapTimeInfo.percentRemaining} />\n            </div>\n          )}\n        </div>\n        {webcam.isFullScreen && !loop.looping && <BasicFooter />}\n      </div>\n    </div>\n  );\n};\n\nexport default Practice;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useMemo } from 'react';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\n\nimport Options from './Options';\nimport { screenStates, screenStatesArrays } from '../lib/screenConstants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  transition: {\n    textAlign: 'center',\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Icons = {\n  [screenStates.players.SINGLE_PLAYER]: PersonIcon,\n  [screenStates.players.MULTIPLAYER]: PeopleAltIcon,\n};\n\nconst ChoosePlayers = (props) => {\n  const classes = useStyles();\n\n  const handleSetPlayerMode = useCallback(\n    ({ currentTarget: { name } }) => {\n      props.setPlayerMode(name);\n    },\n    [props],\n  );\n\n  const buttons = useMemo(\n    () =>\n      screenStatesArrays.players.map((playerMode) => ({\n        props: {\n          key: playerMode,\n          name: playerMode,\n          children: playerMode,\n          onClick: handleSetPlayerMode,\n          Icon: Icons[playerMode],\n          hover: true,\n        },\n      })),\n    [handleSetPlayerMode],\n  );\n\n  return (\n    <div className={classes.root}>\n      <Options label=\"Select Players\" buttons={buttons} layout=\"h\" />\n    </div>\n  );\n};\n\nChoosePlayers.propTypes = {\n  setPlayerMode: PropTypes.func.isRequired,\n};\n\nexport default ChoosePlayers;\n","import { useMemo, useCallback } from 'react';\n\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nexport const useTimeAttack = (loop) => {\n  const simpleGame = useSimpleGame();\n\n  const loadedRef = useRef(false);\n\n  const resultsText = useMemo(() => {\n    let total =\n      simpleGame.scores.length && !loop.looping\n        ? simpleGame.scores.reduce((acc, { score }) => acc + score, 0)\n        : 0;\n    const average = +total.toFixed(1) / simpleGame.scores.length;\n\n    return `You finished Time Attack in ${total.toFixed(1)}\n      seconds, averaging ${average.toFixed(1)} seconds per pose!`;\n  }, [simpleGame, loop]);\n\n  useEffect(() => {\n    if (!loadedRef.current) {\n      loadedRef.current = true;\n      // simpleGame.zip.handleLoadPreparedMasks('survival_2.zip');\n      simpleGame.zip.handleLoadPreparedMasks('custom_mask.zip');\n    }\n  }, [simpleGame]);\n\n  const handleClickGame = useCallback(async () => {\n    if (loop.looping) {\n      loop.stop();\n      simpleGame.reset();\n    } else {\n      loop.start(simpleGame.handleTimeAttackLoop);\n    }\n  }, [loop, simpleGame]);\n\n  const timeAttack = useMemo(\n    () => ({\n      name: 'time attack',\n      simpleGame,\n      resultsText,\n      handleClickGame,\n    }),\n    [simpleGame, resultsText, handleClickGame],\n  );\n\n  return timeAttack;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core';\n\nimport BasicFooter from './BasicFooter';\n\nimport { useGame, useGameMode } from '../../Game';\nimport { useWebcam } from '../../../context/webcam';\nimport { useTimeAttack } from '../../../hooks/screenHooks/timeAttack';\nimport GameInfoBox from '../../GameInfoBox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  screen: {\n    textAlign: 'center',\n    '& > button': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst TimeAttack = (props) => {\n  const classes = useStyles();\n\n  const game = useGame();\n  const webcam = useWebcam();\n  const timeAttack = useGameMode(useTimeAttack);\n\n  const { simpleGame, handleClickGame } = timeAttack;\n\n  const { loop } = game;\n  // TODO: add an animation for the screen content on page transition\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !loop.looping,\n        })}\n      >\n        <div\n          className={classnames(classes.screen, {\n            [classes.optionsTop]: !!loop.looping,\n          })}\n        >\n          {!loop.looping && (\n            <GameInfoBox\n              primaryText=\"Time Attack\"\n              secondaryText={\n                simpleGame.scores?.length ? 'Play Again?' : 'Match the poses as quickly as you can.'\n              }\n              Icon={simpleGame.scores?.length ? 'replay' : 'play'}\n              iconProps={{\n                color: 'secondary',\n                loading: !loop.ready,\n                onClick: handleClickGame,\n              }}\n              middleContent={webcam.isFullScreen && <BasicFooter hideClose={true} />}\n              helpContent={[\n                'Match each pose as quickly as possible',\n                'Your score is based on your total time, and the average time per pose.',\n                'Hop to it!',\n              ]}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeAttack;\n","import { useMemo, useCallback, useState } from 'react';\n\nimport { DEBUG } from '../../lib/constants';\nimport { initialLapInfo } from '../lapTimer';\nimport { useWebcam } from '../../context/webcam';\nimport { screenStates } from '../../lib/screenConstants';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\n\nconst NUM_MASKS = DEBUG ? 1 : 5;\n\nexport const useLocal = (loop) => {\n  const webcam = useWebcam();\n  const [lapTimeInfo, setLapTimeInfo] = useState(initialLapInfo);\n  const simpleGame = useSimpleGame({ setLapTimeInfo });\n  const captureMasks = useCaptureMasks({ maxMasks: NUM_MASKS, setLapTimeInfo });\n\n  const multiplayerScoreSums = useMemo(\n    () =>\n      simpleGame.multiplayerScores.map((scores) =>\n        scores.length && !loop.looping ? scores.reduce((acc, { score }) => acc + score, 0) : 0,\n      ),\n    [simpleGame, loop],\n  );\n\n  const multiplayerResultsText = useMemo(\n    () =>\n      multiplayerScoreSums.map(\n        (score, playerIdx) =>\n          `Player ${playerIdx ? 'Two' : 'One'} scored a total of ${score} points`,\n      ),\n    [multiplayerScoreSums],\n  );\n\n  const [masks, setMasks] = useState([[], []]);\n  const [setupProgress, setSetupProgress] = useState(0);\n  const incrementProgress = useCallback(() => {\n    setSetupProgress((_) => _ + 1);\n  }, []);\n\n  const handleCapture = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      incrementProgress();\n      loop.start(\n        captureMasks.handleLoop(async () => {\n          const imageData = await Promise.all(\n            captureMasks.getMasks().map(({ overlay }) => webcam.dataUriToImageData(overlay)),\n          );\n\n          if (setupProgress === 0) {\n            setMasks([imageData, []]);\n          } else if (setupProgress === 1) {\n            setMasks((state) => [[...state[0]], imageData]);\n          }\n          captureMasks.removeAllMasks();\n        }),\n      );\n    }\n  }, [loop, captureMasks, setupProgress, webcam, incrementProgress]);\n\n  const handlePlayGame = useCallback(() => {\n    const maskIndex = setupProgress === 2 ? 1 : 0;\n    const playerIndex = setupProgress === 2 ? 0 : 1;\n\n    simpleGame.setMasks(masks[maskIndex]);\n    loop.start(simpleGame.handleMultiplayerLoop(playerIndex));\n    incrementProgress();\n  }, [loop, masks, simpleGame, setupProgress, incrementProgress]);\n\n  const handleReset = useCallback(() => {\n    setSetupProgress(0);\n    simpleGame.clearScores();\n  }, [simpleGame]);\n\n  const handleClick = useCallback(() => {\n    if (loop.looping) return;\n\n    if (setupProgress < 2) {\n      handleCapture();\n    } else if (setupProgress < 4) {\n      handlePlayGame();\n    } else {\n      handleReset();\n    }\n  }, [loop.looping, handlePlayGame, handleCapture, handleReset, setupProgress]);\n\n  const local = useMemo(\n    () => ({\n      name: screenStates.mode['Multi Player'].LOCAL,\n      simpleGame,\n      handleClick,\n      lapTimeInfo,\n      captureMasks,\n      setupProgress,\n      multiplayerResultsText,\n      multiplayerScoreSums,\n      NUM_MASKS,\n    }),\n    [\n      simpleGame,\n      lapTimeInfo,\n      captureMasks,\n      setupProgress,\n      handleClick,\n      multiplayerResultsText,\n      multiplayerScoreSums,\n    ],\n  );\n\n  return local;\n};\n","import React, { useMemo } from 'react';\nimport classnames from 'classnames';\nimport ProgressBar from '../../ProgressBar';\nimport { makeStyles } from '@material-ui/core';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\n\nimport { useGame, useGameMode } from '../../Game';\n\nimport { useLocal } from '../../../hooks/screenHooks/local';\nimport { useWebcam } from '../../../context/webcam';\nimport MultiplayerFooter from './MultiplayerFooter';\nimport GameInfoBox from '../../GameInfoBox';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n  container: {\n    textAlign: 'center',\n  },\n  stepper: {\n    background: 'transparent',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst useColorlibStepIconStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage: `linear-gradient( 136deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.main} 50%, ${theme.palette.secondary.dark} 100%)`,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage: `linear-gradient( 136deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.main} 50%, ${theme.palette.secondary.dark} 100%)`,\n  },\n}));\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <CameraAltIcon />,\n    2: <CameraAltIcon />,\n    3: <EmojiPeopleIcon />,\n    4: <EmojiPeopleIcon />,\n  };\n\n  return (\n    <div\n      className={classnames(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst stepperLabels = [\n  'Player One Capture',\n  'Player Two Capture',\n  'Player One Play',\n  'Player Two Play',\n];\n\nconst Local = (props) => {\n  const game = useGame();\n  const local = useGameMode(useLocal);\n  const webcam = useWebcam();\n\n  const [primary, secondary] = [\n    ['One', 'Two'],\n    ['Two', 'One'],\n  ][local.setupProgress % 2];\n\n  const text =\n    local.setupProgress < 2\n      ? `Player ${primary}, get ready to capture ${local.NUM_MASKS} poses.`\n      : `Player ${primary}, get ready to play!`;\n\n  const subtext =\n    local.setupProgress < 2 ? `Player ${secondary}, please leave the room.` : `Good luck!`;\n\n  const replayPhase = local.setupProgress >= 4;\n\n  const winnerText = useMemo(() => {\n    if (!replayPhase) return '';\n    if (local.multiplayerScoreSums[0] > local.multiplayerScoreSums[1]) return 'Player One wins!';\n    if (local.multiplayerScoreSums[0] < local.multiplayerScoreSums[1]) return 'Player Two wins!';\n    return \"It's a tie!\";\n  }, [local.multiplayerScoreSums, replayPhase]);\n\n  const classes = useStyles(replayPhase);\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !game.loop.looping,\n          [classes.rootTop]: false,\n          [classes.rootApart]: !!false,\n        })}\n      >\n        <div\n          className={classnames(classes.container, {\n            [classes.optionsTop]: !!game.loop.looping,\n          })}\n        >\n          {!game.loop.looping ? (\n            <GameInfoBox\n              headerContent={\n                !replayPhase && (\n                  <Stepper\n                    className={classes.stepper}\n                    alternativeLabel\n                    activeStep={local.setupProgress}\n                    connector={<StepConnector />}\n                  >\n                    {stepperLabels.map((label) => (\n                      <Step key={label}>\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n                      </Step>\n                    ))}\n                  </Stepper>\n                )\n              }\n              primaryText={replayPhase ? winnerText : text}\n              middleContent={\n                local.setupProgress >= 3 &&\n                webcam.isFullScreen &&\n                !game.loop.looping && <MultiplayerFooter isFullScreen={webcam.isFullScreen} />\n              }\n              secondaryText={replayPhase ? 'Play again?' : subtext}\n              iconProps={{\n                color: 'secondary',\n                loading: !game.loop.ready,\n                onClick: local.handleClick,\n              }}\n              Icon={replayPhase ? 'replay' : 'play'}\n              helpContent={\n                !replayPhase && [\n                  'In this game mode two players will compete head to head.',\n                  'Each player will take turns capturing funky poses for their opponent to try and match.',\n                  \"The player who does the best job matching their opponent's poses will win.\",\n                ]\n              }\n            />\n          ) : (\n            <div className={classes.progress}>\n              <ProgressBar\n                color={local.lapTimeInfo.color}\n                completed={local.lapTimeInfo.percentRemaining}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nLocal.propTypes = {};\n\nexport default Local;\n","import faker from 'faker';\n\nimport {PEER_ID_BASE} from '../lib/constants';\n\nexport const makePeerId = id => PEER_ID_BASE + id;\n\nexport const cleanPeerId = id => id?.replace(PEER_ID_BASE, '');\n\nexport const makeNameOk = name => name.replace(/[^a-zA-Z0-9]/g, '');\n\nexport const getRandomId = () => faker.internet.userName();\n\n","import Peer from 'peerjs';\nimport { useRef, useState } from 'react';\nimport { useMultiplayerScores } from '../components/Main';\nimport { useWebcam } from '../context/webcam';\nimport { MIN_NAME_LENGTH } from '../lib/constants';\nimport {\n  getRandomId,\n  makeNameOk,\n  makePeerId,\n  cleanPeerId\n} from '../lib/peerUtils';\n\nexport const usePeerJSController = () => {\n  const reconnectRef = useRef();\n  const webcam = useWebcam();\n  const playerOneRef = useRef(false);\n  const [myId, setId] = useState(null);\n  const [peer, setPeer] = useState(null);\n  const [masks, setMasks] = useState([[], []]);\n  const [connection, setConnection] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [opponentName, setOpponentName] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [, setMultiplayerScores] = useMultiplayerScores();\n  const [opponentClickedReset, setOpponentClickedReset] = useState(false);\n  const [myName, setMyName] = useState(makeNameOk(getRandomId()));\n\n  const isPlayerOne = () => playerOneRef.current;\n\n  const clearMasks = () => setMasks([[], []]);\n\n  const triggerRestart = () => {\n    clearMasks();\n    setOpponentClickedReset(true);\n  }\n  \n  const resetEverything = () => {\n    setConnection(null);\n    setIsConnected(false);\n    setIsConnecting(false);\n    playerOneRef.current = false;\n    setOpponentName(null);\n    clearMasks();\n    triggerRestart();\n  }\n\n  const handleConnect = (conn, initiated = false) => {\n    setConnection(conn);\n    setIsConnecting(true);\n\n    conn.on('open', (dunno) => {\n      console.log('CONN: open', dunno);\n      setIsConnected(true);\n      setIsConnecting(false);\n    });\n\n    conn.on('data', async data => {\n      switch (data.eventName) {\n        case 'initialMasks':\n          const imageData = await Promise.all(\n            data.maskDataURIs.map(webcam.dataUriToImageData)\n          );\n\n          setMasks((state) => {\n            const playerOneMasks = playerOneRef.current ? state[0] : imageData;\n            const playerTwoMasks = playerOneRef.current ? imageData : state[1];\n            return [playerOneMasks, playerTwoMasks]\n          });\n          break;\n        case 'results':\n          const opponentPlayerIdx = isPlayerOne() ? 1 : 0;\n\n          setMultiplayerScores((state) => {\n            const newState = [...state];\n            newState[opponentPlayerIdx] = [\n              ...newState[opponentPlayerIdx],\n              data.results,\n            ];\n\n            return newState;\n          });\n          break;\n        case 'restart':\n          triggerRestart();\n          break;\n        default:\n          console.log('Unknown event:', data);\n          break;\n      }\n    });\n\n    conn.on('disconnected', (id) => {\n      console.log('CONN: Got disconnected', id)\n    })\n\n    conn.on('close', (id) => {\n      console.log('CONN: close', id);\n      resetEverything();\n    })\n\n    conn.on('connection', _connection => {\n      console.log(\"CONN connection:\", _connection);\n    });\n\n    conn.on('error', err => {\n      console.log('CONN: error', err);\n    })\n  }\n\n  const init = (newName, enableConnect) => {\n    const _peer = new Peer(makePeerId(newName || myName));\n    setPeer(_peer);\n\n    _peer.on('disconnected', (id) => {\n      console.log('PEER: disconnected', id)\n    })\n\n    _peer.on('close', (id) => {\n      console.log('PEER: close', id)\n    })\n\n    _peer.on('open', (id) => {\n      console.log('PEER: open', id);\n      reconnectRef.current = false;\n      \n      if (enableConnect) {\n        enableConnect();\n      }\n\n      setId(id);\n    })\n\n    _peer.on('connection', _connection => {\n      console.log(\"PEER: connection\", _connection);\n      setOpponentName(cleanPeerId(_connection.peer))\n      handleConnect(_connection);\n    });\n\n    _peer.on('error', err => {\n      console.log('PEER: error', err);\n\n      // If error is that we couldn't connect, then unset the connection object\n      if (err.message.includes(\"Could not connect to peer\") ||\n        err.message.includes(\"Called in wrong state\")) {\n        resetEverything();\n      }\n    })\n  }\n\n  const updateName = (newName, enableConnect) => {\n    if (!newName || newName.length < MIN_NAME_LENGTH) {\n      return;\n    }\n\n    reconnectRef.current = true;\n\n    if (peer) {\n      peer.destroy();\n    }\n    \n    const myNewName = makeNameOk(newName);\n    setMyName(myNewName);\n    init(myNewName, enableConnect);\n  }\n\n  const connect = (id) => {\n    if (reconnectRef.current) {\n      console.log('Connecting too soon after name change. Hold your horses cowboy.');\n\n      return;\n    }\n\n    console.log('Connecting to peer:', id);\n    const conn = peer.connect(makePeerId(id), {serialization: 'json'});\n    setOpponentName(id);\n    playerOneRef.current = true;\n    handleConnect(conn);\n  }\n\n  const send = (message) => {\n    connection.send(message)\n  }\n\n  const sendResults = (results) => send({\n    eventName: 'results',\n    results,\n  });\n\n  const resetGame = () => {\n    clearMasks();\n    send({ eventName: 'restart' });\n  };\n\n  return {\n    init,\n    connect,\n    send,\n    peer,\n    connection,\n    myName,\n    updateName,\n    peerId: cleanPeerId(myId),\n    isConnecting,\n    isConnected,\n    isPlayerOne,\n    opponentName,\n    masks,\n    setMasks,\n    sendResults,\n    resetGame,\n    opponentClickedReset,\n    setOpponentClickedReset,\n  };\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { usePeerJSController } from '../hooks/peerJSController';\n\nexport const peerJSContext = createContext();\n\nexport const usePeerJS = () => {\n  const state = useContext(peerJSContext);\n\n  if (state === undefined) {\n    throw new Error('usePeerJS must be used within a PeerJSProvider');\n  }\n\n  return state;\n};\n\nconst PeerJSProvider = ({ children }) => {\n  const context = usePeerJSController();\n\n  return <peerJSContext.Provider value={context}>{children}</peerJSContext.Provider>;\n};\n\nexport default PeerJSProvider;\n","import { useMemo, useCallback, useState, useEffect } from 'react';\n\nimport { DEBUG } from '../../lib/constants';\nimport { initialLapInfo } from '../lapTimer';\nimport { useWebcam } from '../../context/webcam';\nimport { screenStates } from '../../lib/screenConstants';\nimport { useSimpleGame } from '../loopHandlers/simpleGame';\nimport { useCaptureMasks } from '../loopHandlers/captureMasks';\nimport { usePeerJS } from '../../context/peer';\n\nexport const NUM_MASKS = DEBUG ? 3 : 5;\n\nexport const useRemote = (loop, multiplayerScoreThing) => {\n  const webcam = useWebcam();\n  const peerJs = usePeerJS();\n  const [lapTimeInfo, setLapTimeInfo] = useState(initialLapInfo);\n  const simpleGame = useSimpleGame({ setLapTimeInfo, multiplayerScoreThing });\n  const captureMasks = useCaptureMasks({ maxMasks: NUM_MASKS, setLapTimeInfo });\n\n  useEffect(() => {\n    if (!peerJs.peer) {\n      peerJs.init();\n    }\n  }, [peerJs]);\n\n  const multiplayerScoreSums = useMemo(\n    () =>\n      simpleGame.multiplayerScores.map((scores) =>\n        scores.length && !loop.looping ? scores.reduce((acc, { score }) => acc + score, 0) : 0,\n      ),\n    [simpleGame, loop],\n  );\n\n  const multiplayerResultsText = useMemo(\n    () => \n      multiplayerScoreSums.map(\n        (score, playerIdx) => {\n          const myPlayerIdx = Number(!peerJs.isPlayerOne())\n          const name = myPlayerIdx === playerIdx ? 'You' : peerJs.opponentName;\n\n          return `${name} scored a total of ${score} points`;\n        }\n      ),\n    [multiplayerScoreSums, peerJs],\n  );\n\n  // setupProgress States:\n  // 0 : Both players capture masks simultaneously\n  // 1 : Player 1 Plays (using Player 2's masks) \n  // 2 : Player 2 Plays (using Player 3's masks)\n  const [setupProgress, setSetupProgress] = useState(0);\n  const incrementProgress = useCallback(() => {\n    setSetupProgress((_) => _ + 1);\n  }, []);\n\n  const handleCapture = useCallback(() => {\n    if (loop.looping) {\n      loop.stop();\n    } else {\n      incrementProgress();\n      loop.start(\n        captureMasks.handleLoop(async () => {\n          const maskDataURIs = captureMasks.getMasks().map(({ overlay }) => overlay);\n          if (setupProgress === 0) {\n            peerJs.send({\n              eventName: 'initialMasks',\n              maskDataURIs\n            })\n            const imageData = await Promise.all(\n              maskDataURIs.map((overlay) => webcam.dataUriToImageData(overlay))\n            );\n            peerJs.setMasks((state) => {\n              const playerOneMasks = peerJs.isPlayerOne() ? imageData : state[0];\n              const playerTwoMasks = peerJs.isPlayerOne() ? state[1] : imageData;\n              return [playerOneMasks, playerTwoMasks]\n            });\n          } else {\n            console.error(\"Called handleCapture without setupProgress === 0\")\n          }\n          captureMasks.removeAllMasks();\n        }),\n      );\n    }\n  }, [loop, captureMasks, setupProgress, webcam, peerJs, incrementProgress]);\n\n  const handlePlayGame = useCallback(() => {\n    if (setupProgress === 1) {\n      // Player one plays\n      if (peerJs.isPlayerOne()) {\n        simpleGame.setMasks(peerJs.masks[1]);\n        loop.start(simpleGame.handleMultiplayerLoop(0, peerJs.sendResults));\n        incrementProgress();\n      } else {\n        // Do nothing...\n        incrementProgress();\n      }\n    } else if (setupProgress === 2) {\n      // Player two plays\n      if (!peerJs.isPlayerOne()) {\n        simpleGame.setMasks(peerJs.masks[0]);\n        loop.start(simpleGame.handleMultiplayerLoop(1, peerJs.sendResults));\n        incrementProgress();\n      } else {\n        // Do nothing...\n        incrementProgress();\n      }\n    }\n  }, [loop, peerJs, simpleGame, setupProgress, incrementProgress]);\n\n  const handleReset = useCallback(() => {\n    setSetupProgress(0);\n    simpleGame.clearScores();\n    peerJs.resetGame();\n  }, [simpleGame, peerJs]);\n\n  const handleOpponentReset = useCallback(() => {\n    setSetupProgress(0);\n    simpleGame.clearScores();\n    peerJs.setOpponentClickedReset(false);\n  }, [peerJs, simpleGame]);\n\n  useEffect(() => {\n    if (peerJs.opponentClickedReset) {\n      handleOpponentReset();\n    }\n  }, [peerJs, handleOpponentReset]);\n\n  const handleClick = useCallback(() => {\n    if (loop.looping) return;\n\n    if (setupProgress === 0) {\n      handleCapture();\n    } else if (setupProgress < 3) {\n      handlePlayGame();\n    } else {\n      handleReset();\n    }\n  }, [loop.looping, handlePlayGame, handleCapture, handleReset, setupProgress]);\n\n  const local = useMemo(\n    () => ({\n      peerJs,\n      name: screenStates.mode['Multi Player'].REMOTE,\n      simpleGame,\n      handleClick,\n      lapTimeInfo,\n      captureMasks,\n      setupProgress,\n      multiplayerResultsText,\n      multiplayerScoreSums,\n      incrementProgress,\n      NUM_MASKS,\n    }),\n    [\n      peerJs,\n      simpleGame,\n      lapTimeInfo,\n      captureMasks,\n      setupProgress,\n      handleClick,\n      multiplayerResultsText,\n      multiplayerScoreSums,\n      incrementProgress,\n    ],\n  );\n\n  return local;\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { usePeerJS } from '../context/peer';\nimport { makeNameOk } from '../lib/peerUtils';\nimport { MIN_NAME_LENGTH } from '../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  text: {\n    flexGrow: 1\n  }\n}));\n\nconst PeerTemp = (props) => {\n  const classes = useStyles();\n  const peerJs = usePeerJS();\n  const [peerId, setPeerId] = useState('');\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        value={peerId}\n        className={classes.text}\n        disabled={!peerJs.peer || !!peerJs.connection}\n        onChange={e => setPeerId(makeNameOk(e.target.value))}\n        placeholder=\"Enter your friend's Peer ID\"\n      />\n      <Button\n        disabled={(\n          props.disableConnect\n            || !peerJs.peer\n            || peerId.length < MIN_NAME_LENGTH\n            || !!peerJs.connection\n        )}\n        variant=\"outlined\"\n        onClick={() => peerJs.connect(peerId)}\n      >\n        Connect\n      </Button>\n    </div>\n  );\n};\n\nPeerTemp.propTypes = {};\n\nexport default PeerTemp;\n","import React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport { makeNameOk } from '../lib/peerUtils';\nimport { MIN_NAME_LENGTH } from '../lib/constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  span: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing(1),\n  }\n}));\n\nconst Name = (props) => {\n  const classes = useStyles(props);\n  const nameSetRef = useRef();\n  const [name, setName] = useState('');\n  const textFieldRef = useRef();\n  const timeout = useRef();\n\n  useEffect(() => {\n    if (props.name && !nameSetRef.current) {\n      nameSetRef.current = props.name;\n      setName(props.name);\n    }\n  }, [props.name])\n\n  const handleBlur = (newName) => () => {\n    const resolvedName = (newName || name);\n    clearTimeout(timeout.current);\n    if (resolvedName === props.name) {\n\n      return;\n    }\n    \n    if (name.length > MIN_NAME_LENGTH) {\n      props.updateName(resolvedName, () => props.setDisableConnect(false));\n    } else {\n      setName(props.name);\n      props.setDisableConnect(false);\n    }\n  }\n\n  const handleChange = ({target: {value}}) => {\n    const newName = makeNameOk(value);\n    setName(newName);\n    clearTimeout(timeout.current);\n    props.setDisableConnect(true);\n\n    timeout.current = setTimeout(() => {\n      handleBlur(newName)();\n    }, 1500);\n  }\n\n  return (\n    <div className={classes.root}>\n      <span className={classes.span}>Your name is:</span>\n      <TextField\n        ref={textFieldRef}\n        inputProps={{ spellCheck: 'false' }}\n        value={name}\n        onBlur={handleBlur()}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nName.propTypes = {};\n\nexport default Name;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport classnames from 'classnames';\nimport ProgressBar from '../../ProgressBar';\nimport { makeStyles } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport IconButton from '@material-ui/core/IconButton';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\n\nimport { useGame, useGameMode } from '../../Game';\n\nimport { NUM_MASKS, useRemote } from '../../../hooks/screenHooks/remote';\nimport { useWebcam } from '../../../context/webcam';\nimport MultiplayerFooter from './MultiplayerFooter';\nimport GameInfoBox from '../../GameInfoBox';\nimport PeerTemp from '../../PeerTemp';\nimport { useMultiplayerScores } from '../../Main';\nimport Name from '../../Name';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  scrollContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: -17,\n    overflowY: 'scroll',\n    padding: theme.spacing(1),\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  overlay: {\n    background: 'rgba(255,255,255,0.5)',\n  },\n  rootTop: {\n    justifyContent: 'flex-start',\n  },\n  rootApart: {\n    justifyContent: 'space-between',\n  },\n  optionsTop: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n    paddingLeft: theme.spacing(10),\n    paddingRight: theme.spacing(10),\n  },\n  progress: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(8),\n    right: theme.spacing(8),\n  },\n  container: {\n    textAlign: 'center',\n  },\n  stepper: {\n    background: 'transparent',\n    marginBottom: theme.spacing(2),\n  },\n  idContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  bold: {\n    fontWeight: 'bold',\n    fontSize:18\n  }\n}));\n\nconst useColorlibStepIconStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage: `linear-gradient( 136deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.main} 50%, ${theme.palette.secondary.dark} 100%)`,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage: `linear-gradient( 136deg, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.main} 50%, ${theme.palette.secondary.dark} 100%)`,\n  },\n}));\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <CameraAltIcon />,\n    2: <EmojiPeopleIcon />,\n    3: <EmojiPeopleIcon />,\n  };\n\n  return (\n    <div\n      className={classnames(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst Remote = (props) => {\n  const game = useGame();\n  const webcam = useWebcam();\n  const remote = useGameMode(useRemote);\n  const [multiplayerScores] = useMultiplayerScores();\n\n  const [disableConnect, setDisableConnect] = useState(false);\n\n  const stepperLabels = [\n    'Capture',\n    remote.peerJs.isPlayerOne() ? \"You Play\" : \"They Play\",\n    remote.peerJs.isPlayerOne() ? \"They Play\" : \"You Play\" \n  ];\n\n  const opponentMaskIdx = remote.peerJs.isPlayerOne() ? 1 : 0;\n  const hasOpponentMasks = remote.peerJs.masks[opponentMaskIdx].length === NUM_MASKS;\n  const isYourTurn = (remote.setupProgress === 1 && remote.peerJs.isPlayerOne()) || (remote.setupProgress === 2 && !remote.peerJs.isPlayerOne())\n\n  useEffect(() => {\n    if (!isYourTurn && multiplayerScores[opponentMaskIdx].length === NUM_MASKS && remote.setupProgress < 3) {\n      remote.incrementProgress();\n    }\n  }, [isYourTurn, multiplayerScores, opponentMaskIdx, remote]);\n\n  const opponentIsPlaying = Boolean(\n    multiplayerScores[\n      Number(remote.peerJs.isPlayerOne())\n    ].length\n  );\n\n  const opponentsTurn = (\n    <div>\n      <p>Please wait...</p>\n      <br />\n      <p>It's {remote.peerJs.opponentName}'s turn to play.</p>\n      <br />\n    </div>\n  );\n  const opponentIsPlayingText = (\n    <div>\n      <p>{remote.peerJs.opponentName} has started playing!</p>\n      <br />\n    </div>\n  );\n\n  const yourTurn = (\n    <div>\n      <p>It's your turn.</p>\n      <br />\n      <p>Press play to start!</p>\n    </div>\n  );\n  const waiting = (\n    <div>\n      <p>Waiting for {remote.peerJs.opponentName}'s masks.</p>\n      <p>One moment please...</p>\n    </div>\n  );\n  const text = [\n    `${remote.peerJs.myName}, click play to capture ${remote.NUM_MASKS} poses.`,\n    remote.peerJs.isPlayerOne()\n      ? (hasOpponentMasks\n        ? yourTurn\n        : waiting\n      ) : opponentIsPlaying ? opponentIsPlayingText : opponentsTurn,\n    remote.peerJs.isPlayerOne()\n      ? opponentIsPlaying ? opponentIsPlayingText : opponentsTurn\n      : (hasOpponentMasks\n        ? yourTurn\n        : waiting\n      ),\n  ][remote.setupProgress];\n\n  const isPlayButtonDisabled = () => {\n    if (remote.setupProgress === 0 || remote.setupProgress === 3) return false;\n\n    return !(isYourTurn && hasOpponentMasks);\n  };\n\n  // Removing subtext for now. It seems redundant.\n  const subtext = '';\n  // const subtext = [\n  //   'Press the play button to begin.',\n  //   remote.peerJs.isPlayerOne() ? 'Press the play button to begin.' : 'You are up next.',\n  //   remote.peerJs.isPlayerOne() ? 'Something!!' : 'Press the play button to begin.',\n  // ][remote.setupProgress];\n\n  const replayPhase = remote.setupProgress >= 3;\n\n  const winnerText = useMemo(() => {\n    if (!replayPhase) return '';\n    if (remote.multiplayerScoreSums[0] > remote.multiplayerScoreSums[1]) return remote.peerJs.isPlayerOne() ? 'You won!' : `You lost.`;\n    if (remote.multiplayerScoreSums[0] < remote.multiplayerScoreSums[1]) return !remote.peerJs.isPlayerOne() ? 'You won!' : `You lost.`;\n    return \"It's a tie!\";\n  }, [remote.multiplayerScoreSums, remote.peerJs, replayPhase]);\n\n  const classes = useStyles(replayPhase);\n\n  const ConnectedGameBox = (\n    <GameInfoBox\n      headerContent={\n        !replayPhase && (\n          <Stepper\n            className={classes.stepper}\n            alternativeLabel\n            activeStep={remote.setupProgress}\n            connector={<StepConnector />}\n          >\n            {stepperLabels.map((label) => (\n              <Step key={label}>\n                <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n        )\n      }\n      primaryText={replayPhase ? winnerText : text}\n      middleContent={\n        remote.setupProgress >= 2 &&\n        webcam.isFullScreen &&\n        !game.loop.looping && <MultiplayerFooter isFullScreen={webcam.isFullScreen} />\n      }\n      secondaryText={replayPhase ? 'Play again?' : subtext}\n      iconProps={{\n        color: 'secondary',\n        loading: !game.loop.ready,\n        onClick: remote.handleClick,\n      }}\n      Icon={isPlayButtonDisabled() ? null : replayPhase ? 'replay' : 'play'}\n      helpContent={\n        !replayPhase && [\n          'In this game mode two players will compete head to head.',\n          'Each player will take turns capturing funky poses for their opponent to try and match.',\n          \"The player who does the best job matching their opponent's poses will win.\",\n        ]\n      }\n    />\n  );\n\n  const UnconnectedGameBox = (\n    <GameInfoBox\n      headerContent={null}\n      primaryText={\"Connect to a friend to play remotely\"}\n      middleContent={(\n        <div className={classes.idContainer}>\n          <Name\n            name={remote.peerJs.peerId}\n            updateName={remote.peerJs.updateName}\n            setDisableConnect={setDisableConnect}\n          />\n          <CopyToClipboard text={remote.peerJs.myName}>\n            <IconButton aria-label=\"copy\" color=\"secondary\">\n              <FileCopyIcon />\n            </IconButton>\n          </CopyToClipboard>\n        </div>\n      )}\n      secondaryText={<PeerTemp disableConnect={disableConnect} />}\n      iconProps={{\n        color: 'secondary',\n        disabled: true,\n        onClick: remote.handleClick,\n      }}\n    />\n  );\n\n  return (\n    <div className={classes.root}>\n      <div\n        className={classnames(classes.scrollContainer, {\n          [classes.overlay]: !game.loop.looping,\n          [classes.rootTop]: false,\n          [classes.rootApart]: !!false,\n        })}\n      >\n        <div\n          className={classnames(classes.container, {\n            [classes.optionsTop]: !!game.loop.looping,\n          })}\n        >\n          {!game.loop.looping ? (\n            remote.peerJs.isConnected\n              ? ConnectedGameBox\n              : UnconnectedGameBox\n          ) : (\n            <div className={classes.progress}>\n              <ProgressBar\n                color={remote.lapTimeInfo.color}\n                completed={remote.lapTimeInfo.percentRemaining}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nRemote.propTypes = {};\n\nexport default Remote;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { screenStates } from '../../lib/screenConstants';\n\nimport Null from '../Null';\nimport SelectGameMode from '../SelectGameMode';\nimport Practice from './SinglePlayer/Practice';\nimport Survival from './SinglePlayer/Survival';\nimport ChoosePlayers from '../ChoosePlayers';\nimport TimeAttack from './SinglePlayer/TimeAttack';\nimport Local from './MultiPlayer/Local';\nimport Remote from './MultiPlayer/Remote';\n\nconst Screens = {\n  [screenStates.screen.PLAY]: {\n    [screenStates.players.SINGLE_PLAYER]: {\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].PRACTICE]: Practice,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].SURVIVAL]: Survival,\n      [screenStates.mode[screenStates.players.SINGLE_PLAYER].TIME_ATTACK]: TimeAttack,\n    },\n    [screenStates.players.MULTIPLAYER]: {\n      [screenStates.mode[screenStates.players.MULTIPLAYER].LOCAL]: Local,\n      [screenStates.mode[screenStates.players.MULTIPLAYER].REMOTE]: Remote,\n    },\n  },\n};\n\nconst ScreenContent = (props) => {\n  const { screen, mode, players } = props.screen.state;\n\n  if (screen === screenStates.screen.DEFAULT)\n    return <ChoosePlayers setPlayerMode={props.screen.handlers.setPlayerMode} />;\n  if (mode === screenStates.mode.DEFAULT) return <SelectGameMode screen={props.screen} />;\n\n  const Content = Screens[screen]?.[players]?.[mode] || Null;\n\n  return <Content />;\n};\n\nScreenContent.propTypes = {\n  screen: PropTypes.object.isRequired,\n};\n\nexport default ScreenContent;\n","import { useRef, useState, useEffect, useCallback } from 'react';\n\nimport { useWebcam } from '../context/webcam';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport BodyPixWorker from 'workerize-loader!../worker/bodyPix';\n\nconst bodyPixWorker = BodyPixWorker();\n\nexport const useBodyPixController = () => {\n  const webcam = useWebcam();\n\n  const loadRef = useRef();\n  const preloadRef = useRef();\n  const [netReady, setNetReady] = useState(false);\n  const [netPreloaded, setNetPreloaded] = useState(false);\n\n  // load the model on the first mount\n  useEffect(() => {\n    if (!loadRef.current && webcam.ready) {\n      loadRef.current = true;\n      bodyPixWorker\n        .load()\n        .then(() => {\n          console.log('BodyPix loaded');\n          setNetReady(true);\n        })\n        .catch(console.error);\n    }\n  }, [webcam]);\n\n  // TODO: Make it possible to tweak bodyPix settings\n  const predict = useCallback(async () => {\n    if (!netReady) {\n      throw new Error('Please wait for the model to load before calling \"predict\"');\n    }\n\n    const segmentation = await bodyPixWorker.predict(webcam.getVideoAsImageData());\n\n    // console.log({segmentation});\n\n    return segmentation;\n  }, [netReady, webcam]);\n\n  // pre load the model by running a first prediction\n  useEffect(() => {\n    if (netReady && !preloadRef.current && !netPreloaded) {\n      preloadRef.current = true;\n      predict().then(() => {\n        setNetPreloaded(true);\n      });\n    }\n  }, [predict, netReady, netPreloaded]);\n\n  // don't return the prediction fn until the model has processed the first frame\n  return netPreloaded ? predict : null;\n};\n","import React, { useContext, createContext } from 'react';\n\nimport { useBodyPixController } from '../hooks/bodyPixController';\n\nexport const bodyPixContext = createContext();\n\nexport const useBodyPix = () => {\n  const state = useContext(bodyPixContext);\n\n  // specifically check for undefined, not just truthy\n  // bc bodyPixController returns null before it is ready\n  if (state === undefined) {\n    throw new Error('useBodyPix must be used within a BodyPixProvider');\n  }\n\n  return state;\n};\n\nconst BodyPixProvider = ({ children }) => {\n  const context = useBodyPixController();\n\n  return <bodyPixContext.Provider value={context}>{children}</bodyPixContext.Provider>;\n};\n\nexport default BodyPixProvider;\n","import { useRef, useState, useCallback, useMemo } from 'react';\n\nimport { useLoopTime } from './loopTime';\nimport { useLapTimer } from './lapTimer';\nimport { useWebcam } from '../context/webcam';\nimport { useBodyPix } from '../context/bodyPix';\n\nexport const useLoop = () => {\n  const webcam = useWebcam();\n  const predict = useBodyPix();\n  const loopReady = predict && webcam.ready;\n\n  const loopTime = useLoopTime();\n  const lapTimer = useLapTimer();\n\n  const loopingRef = useRef();\n  const handleLoopRef = useRef();\n  const [looping, setLooping] = useState(false);\n\n  // set the flags to start the loop\n  const setStartLoop = useCallback(() => {\n    // we clear the lapTimer here as opposed to after \"stopping\" the loop to avoid async errors\n    lapTimer.clear();\n    loopTime.reset();\n    loopingRef.current = true;\n    setLooping(true);\n  }, [loopTime, lapTimer]);\n\n  // clear loop flags to trigger end of loop\n  // not synchronous, loop will terminate on next pass\n  const setStopLoop = useCallback(() => {\n    loopingRef.current = false;\n    setLooping(false);\n  }, []);\n\n  // fn passed to requestAnimationFrame\n  // keeps time and runs handleLoop fn passed to start\n  const loop = useCallback(\n    async (timestamp) => {\n      const time = loopTime.update(timestamp);\n      const controller = {\n        time,\n        webcam,\n        predict,\n        timerRef: lapTimer.timerRef,\n        useTimer: lapTimer.useTimer,\n        stop: setStopLoop,\n      };\n\n      const cleanup = await handleLoopRef.current(controller);\n\n      lapTimer.handleLap(controller);\n\n      if (loopingRef.current) {\n        requestAnimationFrame(loop);\n      } else {\n        setStopLoop();\n        handleLoopRef.current = null;\n        webcam.clearCanvas();\n        if (cleanup) cleanup();\n      }\n    },\n    [webcam, predict, lapTimer, loopTime, setStopLoop],\n  );\n\n  const start = useCallback(\n    async (handleLoop) => {\n      if (!loopReady) {\n        throw new Error('The loop is not ready');\n      } else if (loopingRef.current) {\n        throw new Error('The loop is already running');\n      } else if (!predict) {\n        throw new Error('Please wait for BodyPix to load...');\n      } else if (!handleLoop) {\n        throw new Error('A loop handler is required when calling loop.start');\n      }\n\n      handleLoopRef.current = handleLoop;\n      setStartLoop();\n\n      return requestAnimationFrame(loop);\n    },\n    [loop, predict, setStartLoop, loopReady],\n  );\n\n  const controller = useMemo(\n    () => ({\n      start,\n      looping,\n      ready: loopReady,\n      stop: setStopLoop,\n    }),\n    [start, looping, setStopLoop, loopReady],\n  );\n\n  return controller;\n};\n","import { useCallback, useRef, useMemo } from 'react';\n\nexport const useLoopTime = () => {\n  const lastTimeRef = useRef();\n  const startTimeRef = useRef();\n  const totalFramesRef = useRef();\n  const fpsSumRef = useRef();\n  const lapTime = useRef();\n\n  const reset = useCallback((timestamp = 0) => {\n    startTimeRef.current = timestamp;\n    lastTimeRef.current = timestamp;\n    fpsSumRef.current = 0;\n    totalFramesRef.current = 0;\n    lapTime.current = 0;\n  }, []);\n\n  const resetLapTime = useCallback(() => {\n    lapTime.current = 0;\n  }, []);\n\n  const update = useCallback(\n    (timestamp) => {\n      let first = false;\n      if (!startTimeRef.current) {\n        first = true;\n        reset(timestamp);\n      }\n\n      const deltaTime = timestamp - lastTimeRef.current;\n      lapTime.current += deltaTime;\n\n      let fps = 0;\n      let avgFps = 0;\n\n      // start calculating after the first loop to avoid dividing by 0\n      if (totalFramesRef.current++) {\n        fps = 1000 / deltaTime;\n        avgFps = fpsSumRef.current / totalFramesRef.current;\n        fpsSumRef.current += fps;\n      }\n\n      const elapsed = timestamp - startTimeRef.current;\n      lastTimeRef.current = timestamp;\n\n      return {\n        first,\n        timestamp,\n        fps,\n        avgFps,\n        elapsed,\n        frames: totalFramesRef.current,\n        lapTime: lapTime.current,\n        resetLapTime,\n      };\n    },\n    [reset, resetLapTime],\n  );\n\n  const controller = useMemo(() => ({ update, reset }), [update, reset]);\n\n  return controller;\n};\n","import { useReducer, useMemo, useCallback } from 'react';\n\nimport {\n  initialScreenState,\n  screenStates,\n  screenTypes,\n  screenStatesArrays,\n} from '../lib/screenConstants';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case screenTypes.SET_GAME_MODE:\n      return { ...state, mode: action.value };\n    case screenTypes.SET_PLAYER_MODE:\n      return { ...state, screen: screenStates.screen.PLAY, players: action.value };\n    case screenTypes.RESET:\n      return initialScreenState;\n    case screenTypes.REVERSE: {\n      const newState = { ...state };\n      if (state.mode) {\n        newState.mode = screenStates.mode.DEFAULT;\n      } else if (state.screen !== screenStates.screen.DEFAULT) {\n        newState.screen = screenStates.screen.DEFAULT;\n        newState.players = screenStates.players.DEFAULT;\n      } else return state;\n\n      return newState;\n    }\n    default:\n      throw new Error(`Invalid action: ${action.type}`);\n  }\n};\n\nexport const useScreenController = () => {\n  const [screenState, dispatch] = useReducer(reducer, initialScreenState);\n\n  const setScreen = useCallback((screen) => {\n    if (!screenStatesArrays.screen.includes(screen)) {\n      throw new Error(`Unknown screen: ${screen}`);\n    }\n\n    dispatch({ type: screenTypes.SET_SCREEN, value: screen });\n  }, []);\n\n  const setGameMode = useCallback((gameMode) => {\n    if (\n      ![\n        ...screenStatesArrays.mode[screenStates.players.SINGLE_PLAYER],\n        ...screenStatesArrays.mode[screenStates.players.MULTIPLAYER],\n      ].includes(gameMode)\n    ) {\n      throw new Error(`Unknown gameMode: ${gameMode}`);\n    }\n\n    dispatch({ type: screenTypes.SET_GAME_MODE, value: gameMode });\n  }, []);\n\n  const setPlayerMode = useCallback((playerMode) => {\n    if (!screenStatesArrays.players.includes(playerMode)) {\n      throw new Error(`Unknown playerMode: ${playerMode}`);\n    }\n    \n    dispatch({ type: screenTypes.SET_PLAYER_MODE, value: playerMode });\n  }, []);\n\n  const resetState = useCallback(() => {\n    dispatch({ type: screenTypes.RESET });\n  }, []);\n\n  const reverseState = useCallback(() => {\n    dispatch({ type: screenTypes.REVERSE });\n  }, []);\n\n  const handlers = useMemo(\n    () => ({\n      setScreen,\n      resetState,\n      setGameMode,\n      reverseState,\n      setPlayerMode,\n    }),\n    [setScreen, resetState, setGameMode, reverseState, setPlayerMode],\n  );\n\n  return [screenState, handlers];\n};\n","import { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { useEffect } from 'react';\n\nimport { useLoop } from './loop';\nimport { DEBUG } from '../lib/constants';\nimport { useAudio } from '../context/audio';\nimport { useScreenController } from './screenController';\nimport { screenStates } from '../lib/screenConstants';\n\nexport const useGameController = () => {\n  const loop = useLoop();\n  const [mode, setMode] = useState(null);\n  const [screenState, screenHandlers] = useScreenController();\n  const [warningAcknowledged, setWarningAcknowledged] = useState(DEBUG);\n  const warningRef = useRef();\n  const audio = useAudio();\n  const [helpOpen, setHelpOpen] = useState(false);\n\n  const handleOpenHelp = useCallback(() => {\n    setHelpOpen(true);\n  }, []);\n\n  const handleCloseHelp = useCallback(() => {\n    setHelpOpen(false);\n  }, []);\n\n  const handleCloseWarning = useCallback(() => {\n    setWarningAcknowledged(true);\n  }, []);\n\n  const headerController = useMemo(\n    () => ({\n      onHomeScreen: screenState.screen === screenStates.screen.DEFAULT,\n      handleBack:\n        screenState.players === screenStates.players.MULTIPLAYER\n          ? screenHandlers.resetState\n          : screenHandlers.reverseState,\n      toggleAudio: audio.handlers.toggle,\n      audioState: audio.state,\n      openHelp: handleOpenHelp,\n      closeHelp: handleCloseHelp,\n      helpOpen,\n    }),\n    [screenState, screenHandlers, audio, handleCloseHelp, handleOpenHelp, helpOpen],\n  );\n\n  useEffect(() => {\n    if (warningRef.current) return;\n\n    if (screenState.screen === screenStates.screen.DEFAULT) {\n      warningRef.current = true;\n    }\n  }, [screenState]);\n\n  useEffect(() => {\n    if (\n      (screenState.screen === screenStates.screen.DEFAULT ||\n        screenState.mode === screenStates.mode.DEFAULT) &&\n      mode\n    ) {\n      setMode(null);\n    }\n  }, [screenState, mode]);\n\n  useEffect(() => {\n    if (\n      (screenState.screen === screenStates.screen.DEFAULT ||\n        screenState.mode === screenStates.mode.DEFAULT) &&\n      loop.looping\n    ) {\n      loop.stop();\n    }\n  }, [screenState, loop]);\n\n  const gameController = useMemo(\n    () => ({\n      screen: {\n        state: screenState,\n        handlers: screenHandlers,\n      },\n      mode,\n      loop,\n      setMode,\n      headerController,\n      warning: {\n        completed: warningAcknowledged,\n        handleCloseWarning,\n      },\n    }),\n    [\n      mode,\n      loop,\n      screenState,\n      screenHandlers,\n      headerController,\n      handleCloseWarning,\n      warningAcknowledged,\n    ],\n  );\n\n  return gameController;\n};\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/styles';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: 'red',\n    fontStyle: 'italic',\n  },\n  actions: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  dialogContent: {\n    fontStyle: 24,\n  },\n  group: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Warning = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog aria-labelledby=\"warning\" open={open}>\n      <MuiDialogTitle disableTypography id=\"warning\" className={classes.title}>\n        <Typography variant=\"h5\">Warning!</Typography>\n      </MuiDialogTitle>\n      <MuiDialogContent dividers className={classes.dialogContent}>\n        <Typography component=\"h2\" variant=\"h6\">\n          physically demanding\n        </Typography>\n        <Typography gutterBottom>\n          Be careful when moving. Consider consulting a medical professional before playing.\n        </Typography>\n        <div className={classes.group}>\n          <Typography component=\"h2\" variant=\"h6\">\n            Large Space Required\n          </Typography>\n          <Typography gutterBottom>\n            Ensure that you have a large open playing area that will allow you to move around\n            safely.\n          </Typography>\n        </div>\n      </MuiDialogContent>\n      <DialogActions className={classes.actions}>\n        <Button color=\"secondary\" onClick={handleClose} variant=\"contained\">\n          Acknowledge\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nWarning.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default memo(Warning);\n","import PropTypes from 'prop-types';\nimport React, { memo, createContext, useContext, useEffect } from 'react';\n\nimport Webcam from './Webcam';\nimport GlobalHeader from './GlobalHeader';\nimport ScreenHeader from './GameScreens/ScreenHeader';\nimport ScreenFooter from './GameScreens/ScreenFooter';\nimport ScreenContent from './GameScreens/ScreenContent';\n\nimport { useGameController } from '../hooks/game';\nimport Warning from './Warning';\n\nconst gameContext = createContext();\n\nexport const useGame = () => {\n  const state = useContext(gameContext);\n\n  if (!state) {\n    throw new Error('useGame must be called from inside the <Game> component.');\n  }\n\n  return state;\n};\n\nexport const useGameMode = (useGameModeHook) => {\n  const { loop, setMode } = useGame();\n  const gameMode = useGameModeHook(loop);\n\n  useEffect(() => {\n    setMode(gameMode);\n  }, [gameMode, setMode]);\n\n  return gameMode;\n};\n\nconst Game = ({ webcam }) => {\n  const game = useGameController();\n\n  return (\n    <gameContext.Provider value={game}>\n      <Warning open={!game.warning.completed} handleClose={game.warning.handleCloseWarning} />\n      <GlobalHeader controller={game.headerController} />\n      <ScreenHeader screenState={game.screen.state} />\n      <Webcam overlay={!game.screen.state.mode} headerController={game.headerController}>\n        <ScreenContent screen={game.screen} />\n      </Webcam>\n      <ScreenFooter screen={game.screen} />\n    </gameContext.Provider>\n  );\n};\n\nGame.propTypes = {\n  webcam: PropTypes.object.isRequired,\n};\n\nexport default memo(Game);\n","import React from 'react';\n\nconst NoWebcam = () => (\n  <div>Sorry, but this game requires a webcam. Please plug in a webcam and refresh the page.</div>\n);\n\nexport default NoWebcam;\n","import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useRef, useEffect, memo, createContext, useContext, useState } from 'react';\n\nimport { useWebcam } from '../../context/webcam';\n\nimport Game from '../Game';\nimport NoWebcam from './NoWebcam';\nimport { maxWidth } from '../../lib/constants';\nimport PeerJSProvider from '../../context/peer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth,\n    margin: `0 auto ${theme.spacing(2)}px`,\n  },\n}));\n\nconst multiplayerScoreContext = createContext();\n\nexport const useMultiplayerScores = () => {\n  const state = useContext(multiplayerScoreContext);\n\n  if (!state) {\n    throw new Error('useMultiplayerScoreContext must be called from inside the <Game> component.');\n  }\n\n  return state;\n};\n\nconst Main = (props) => {\n  const webcam = useWebcam();\n  const { currentDeviceId, hasVideo, cameras, autoStartDeviceId } = webcam;\n\n  const startedRef = useRef();\n\n  useEffect(() => {\n    if (\n      hasVideo &&\n      cameras.length &&\n      (currentDeviceId || autoStartDeviceId) &&\n      !startedRef.current\n    ) {\n      startedRef.current = true;\n\n      webcam.start().catch(console.error);\n    }\n  }, [hasVideo, cameras, currentDeviceId, autoStartDeviceId, webcam]);\n\n  const classes = useStyles();\n\n  const multiplayerScores = useState([[], []]);\n\n  return (\n    <main className={classes.root}>{\n      !hasVideo\n        ? <NoWebcam />\n        : (\n          <multiplayerScoreContext.Provider value={multiplayerScores}>\n            <PeerJSProvider>\n              <Game webcam={webcam} />\n            </PeerJSProvider>\n          </multiplayerScoreContext.Provider>\n        )\n      }</main>\n  );\n};\n\nMain.propTypes = {\n  cvReady: PropTypes.bool.isRequired,\n};\n\nexport default memo(Main);\n","import Particles from 'particlesjs';\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport { hot } from 'react-hot-loader';\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Main from '../components/Main';\nimport WebcamProvider from '../context/webcam';\nimport BodyPixProvider from '../context/bodyPix';\nimport AudioProvider from '../context/audio';\nimport CarbonProvider from '../context/carbon';\n\nexport const getFonts = (...fonts) =>\n  [\n    ...fonts,\n    '-apple-system',\n    'BlinkMacSystemFont',\n    '\"Segoe UI\"',\n    'Roboto',\n    '\"Helvetica Neue\"',\n    'Arial',\n    'sans-serif',\n    '\"Apple Color Emoji\"',\n    '\"Segoe UI Emoji\"',\n    '\"Segoe UI Symbol\"',\n  ].join(',');\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#FFFFFF' },\n    secondary: { main: '#000000' },\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: getFonts('Orbitron'),\n    body1: {\n      fontWeight: 600,\n      fontFamily: getFonts('Rajdhani'),\n      fontSize: 18,\n    },\n  },\n  overrides: {},\n});\n\nfunction App() {\n  const [cvReady, setCvReady] = useState(false);\n  const particlesRef = useRef();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (window.cvReady) {\n        setCvReady(true);\n        clearInterval(interval);\n      }\n    }, 200);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!particlesRef.current) {\n      particlesRef.current = true;\n      Particles.init({\n        selector: '.background',\n      });\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <BrowserView>\n        <WebcamProvider>\n          <BodyPixProvider>\n            <AudioProvider>\n              <CarbonProvider>\n                <>\n                  <CssBaseline />\n                  <Main cvReady={cvReady} />\n                </>\n              </CarbonProvider>\n            </AudioProvider>\n          </BodyPixProvider>\n        </WebcamProvider>\n      </BrowserView>\n      <MobileView>\n        <Typography component=\"h1\" variant=\"h6\">\n          To play Carbon Copy, open this site on a laptop or desktop computer.\n        </Typography>\n      </MobileView>\n    </MuiThemeProvider>\n  );\n}\n\nexport default process.env.NODE_ENV === 'production' ? App : hot(module)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"load\",\"predict\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"dc76288e33712f0d689c.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 607;"],"sourceRoot":""}